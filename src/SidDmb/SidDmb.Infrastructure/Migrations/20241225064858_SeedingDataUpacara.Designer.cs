// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NetTopologySuite.Geometries;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SidDmb.Infrastructure.Database;

#nullable disable

namespace SidDmb.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241225064858_SeedingDataUpacara")]
    partial class SeedingDataUpacara
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "postgis");
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DataRisetKolaborator", b =>
                {
                    b.Property<string>("DaftarDataRisetId")
                        .HasColumnType("text");

                    b.Property<int>("DaftarKolaboratorPenelitianId")
                        .HasColumnType("integer");

                    b.HasKey("DaftarDataRisetId", "DaftarKolaboratorPenelitianId");

                    b.HasIndex("DaftarKolaboratorPenelitianId");

                    b.ToTable("DataRisetKolaborator");
                });

            modelBuilder.Entity("DistribusiKolaborator", b =>
                {
                    b.Property<string>("DaftarDistribusiId")
                        .HasColumnType("text");

                    b.Property<int>("DaftarKolaboratorId")
                        .HasColumnType("integer");

                    b.HasKey("DaftarDistribusiId", "DaftarKolaboratorId");

                    b.HasIndex("DaftarKolaboratorId");

                    b.ToTable("DistribusiKolaborator");
                });

            modelBuilder.Entity("EventKolaborator", b =>
                {
                    b.Property<string>("DaftarEventId")
                        .HasColumnType("text");

                    b.Property<int>("DaftarKolaboratorId")
                        .HasColumnType("integer");

                    b.HasKey("DaftarEventId", "DaftarKolaboratorId");

                    b.HasIndex("DaftarKolaboratorId");

                    b.ToTable("EventKolaborator");
                });

            modelBuilder.Entity("KegiatanPrimaKolaborator", b =>
                {
                    b.Property<string>("DaftarKegiatanPrimaId")
                        .HasColumnType("text");

                    b.Property<int>("KolaboratorKegiatanId")
                        .HasColumnType("integer");

                    b.HasKey("DaftarKegiatanPrimaId", "KolaboratorKegiatanId");

                    b.HasIndex("KolaboratorKegiatanId");

                    b.ToTable("KegiatanPrimaKolaborator");
                });

            modelBuilder.Entity("KolaboratorMateri", b =>
                {
                    b.Property<int>("DaftarKolaboratorId")
                        .HasColumnType("integer");

                    b.Property<string>("DaftarMateriId")
                        .HasColumnType("text");

                    b.HasKey("DaftarKolaboratorId", "DaftarMateriId");

                    b.HasIndex("DaftarMateriId");

                    b.ToTable("KolaboratorMateri");
                });

            modelBuilder.Entity("KolaboratorPelatihan", b =>
                {
                    b.Property<int>("DaftarKolaboratorId")
                        .HasColumnType("integer");

                    b.Property<string>("DaftarPelatihanId")
                        .HasColumnType("text");

                    b.HasKey("DaftarKolaboratorId", "DaftarPelatihanId");

                    b.HasIndex("DaftarPelatihanId");

                    b.ToTable("KolaboratorPelatihan");
                });

            modelBuilder.Entity("KolaboratorProduk", b =>
                {
                    b.Property<int>("DaftarKolaboratorId")
                        .HasColumnType("integer");

                    b.Property<string>("DaftarProdukId")
                        .HasColumnType("text");

                    b.HasKey("DaftarKolaboratorId", "DaftarProdukId");

                    b.HasIndex("DaftarProdukId");

                    b.ToTable("KolaboratorProduk");
                });

            modelBuilder.Entity("KolaboratorRekomendasi", b =>
                {
                    b.Property<int>("DaftarKolaboratorId")
                        .HasColumnType("integer");

                    b.Property<string>("DaftarRekomendasiId")
                        .HasColumnType("text");

                    b.HasKey("DaftarKolaboratorId", "DaftarRekomendasiId");

                    b.HasIndex("DaftarRekomendasiId");

                    b.ToTable("KolaboratorRekomendasi");
                });

            modelBuilder.Entity("KolaboratorSertifikasi", b =>
                {
                    b.Property<int>("DaftarKolaboratorId")
                        .HasColumnType("integer");

                    b.Property<string>("DaftarSertifikasiId")
                        .HasColumnType("text");

                    b.HasKey("DaftarKolaboratorId", "DaftarSertifikasiId");

                    b.HasIndex("DaftarSertifikasiId");

                    b.ToTable("KolaboratorSertifikasi");
                });

            modelBuilder.Entity("SidDmb.Domain.Authentication.AppUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("AppUser");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PasswordHash = "AQAAAAIAAYagAAAAEIvnLFelRQItxw7VYqY6lQ23tSsOmnZ3FMifozrOmDHUmPCZrAYjnbzfDR07zgFJjw==",
                            Role = "ADMIN",
                            UserName = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            PasswordHash = "AQAAAAIAAYagAAAAEJhTWHliTZKRD57TRJFPsWpZgZsWxU21omcBx/HdNuyMFsj+2Ibhs2z2aCYVGwEUsw==",
                            Role = "KOLABORATOR",
                            UserName = "Dinas Pariwisata"
                        },
                        new
                        {
                            Id = 3,
                            PasswordHash = "AQAAAAIAAYagAAAAEJhTWHliTZKRD57TRJFPsWpZgZsWxU21omcBx/HdNuyMFsj+2Ibhs2z2aCYVGwEUsw==",
                            Role = "KOLABORATOR",
                            UserName = "Dinas Kebudayaan"
                        },
                        new
                        {
                            Id = 4,
                            PasswordHash = "AQAAAAIAAYagAAAAEJhTWHliTZKRD57TRJFPsWpZgZsWxU21omcBx/HdNuyMFsj+2Ibhs2z2aCYVGwEUsw==",
                            Role = "KOLABORATOR",
                            UserName = "Dinas Koperasi UMKM"
                        },
                        new
                        {
                            Id = 5,
                            PasswordHash = "AQAAAAIAAYagAAAAEJhTWHliTZKRD57TRJFPsWpZgZsWxU21omcBx/HdNuyMFsj+2Ibhs2z2aCYVGwEUsw==",
                            Role = "KOLABORATOR",
                            UserName = "DP3AP2"
                        },
                        new
                        {
                            Id = 6,
                            PasswordHash = "AQAAAAIAAYagAAAAEJhTWHliTZKRD57TRJFPsWpZgZsWxU21omcBx/HdNuyMFsj+2Ibhs2z2aCYVGwEUsw==",
                            Role = "KOLABORATOR",
                            UserName = "Assosiacation"
                        },
                        new
                        {
                            Id = 7,
                            PasswordHash = "AQAAAAIAAYagAAAAEJhTWHliTZKRD57TRJFPsWpZgZsWxU21omcBx/HdNuyMFsj+2Ibhs2z2aCYVGwEUsw==",
                            Role = "KOLABORATOR",
                            UserName = "BPOM"
                        },
                        new
                        {
                            Id = 8,
                            PasswordHash = "AQAAAAIAAYagAAAAEJhTWHliTZKRD57TRJFPsWpZgZsWxU21omcBx/HdNuyMFsj+2Ibhs2z2aCYVGwEUsw==",
                            Role = "KOLABORATOR",
                            UserName = "Academics"
                        },
                        new
                        {
                            Id = 9,
                            PasswordHash = "AQAAAAIAAYagAAAAEJhTWHliTZKRD57TRJFPsWpZgZsWxU21omcBx/HdNuyMFsj+2Ibhs2z2aCYVGwEUsw==",
                            Role = "KOLABORATOR",
                            UserName = "Media"
                        });
                });

            modelBuilder.Entity("SidDmb.Domain.CollaborationFunction.Kolaborator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AppUserId")
                        .HasColumnType("integer");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId")
                        .IsUnique();

                    b.ToTable("Kolaborator");

                    b.HasData(
                        new
                        {
                            Id = 2,
                            AppUserId = 2,
                            Nama = "Dinas Pariwisata"
                        },
                        new
                        {
                            Id = 3,
                            AppUserId = 3,
                            Nama = "Dinas Kebudayaan"
                        },
                        new
                        {
                            Id = 4,
                            AppUserId = 4,
                            Nama = "Dinas Koperasi UMKM"
                        },
                        new
                        {
                            Id = 5,
                            AppUserId = 5,
                            Nama = "DP3AP2"
                        },
                        new
                        {
                            Id = 6,
                            AppUserId = 6,
                            Nama = "Assosiacation"
                        },
                        new
                        {
                            Id = 7,
                            AppUserId = 7,
                            Nama = "BPOM"
                        },
                        new
                        {
                            Id = 8,
                            AppUserId = 8,
                            Nama = "Academics"
                        },
                        new
                        {
                            Id = 9,
                            AppUserId = 9,
                            Nama = "Media"
                        });
                });

            modelBuilder.Entity("SidDmb.Domain.CollaborationFunction.ModulManajemenEvent.PelaporanDanDokumentasi.LaporanEvent", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("EventId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FeedbackPeserta")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FotoDokumentasi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LaporanDetail")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MasukanKolaborator")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("PengeluaranEvent")
                        .HasColumnType("double precision");

                    b.Property<string>("RekomendasiUntukEventBerikutnya")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("TanggalDiinputkan")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateOnly>("TanggalPelaporan")
                        .HasColumnType("date");

                    b.Property<DateTime>("TanggalPembaruanData")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("UlasanSingkatEvent")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("VideoDokumentasi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("EventId")
                        .IsUnique();

                    b.ToTable("LaporanEvent");
                });

            modelBuilder.Entity("SidDmb.Domain.CollaborationFunction.ModulManajemenEvent.PengelolaanEvent.Event", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<double>("Anggaran")
                        .HasColumnType("double precision");

                    b.Property<string>("Dekripsi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("JumlahPesertaMaksimal")
                        .HasColumnType("integer");

                    b.Property<string>("KontakInformasi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Lokasi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MediaPromosi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("Pendapatan")
                        .HasColumnType("double precision");

                    b.Property<string>("Penyelenggara")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Sponsor")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("StatusPendaftaran")
                        .HasColumnType("integer");

                    b.Property<DateTime>("TanggalDiinputkan")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("TanggalPembaruanData")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("TanggalWaktu")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("TargetPeserta")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Event");
                });

            modelBuilder.Entity("SidDmb.Domain.CollaborationFunction.ModulPelatihanEdukasi.MateriEdukasiDanPembelajaran.Materi", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("DekripsiMateri")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DokumenPendukung")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FeedBackAudiens")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("JudulMateri")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("JumlahPengguna")
                        .HasColumnType("integer");

                    b.Property<int>("KategoriMateri")
                        .HasColumnType("integer");

                    b.Property<string>("LinkUnduhan")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PenyediaMateri")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RekomendasiPembaruanMateri")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("StatusMateri")
                        .HasColumnType("integer");

                    b.Property<DateTime>("TanggalDiinputkan")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("TanggalPembaruanData")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateOnly>("TanggalRilis")
                        .HasColumnType("date");

                    b.Property<int>("TargetAudiens")
                        .HasColumnType("integer");

                    b.Property<int>("TipeMateri")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Materi");
                });

            modelBuilder.Entity("SidDmb.Domain.CollaborationFunction.ModulPelatihanEdukasi.PeningkatanKapasitas.Pelatihan", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("Dekripsi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DokumenDanMedia")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<TimeSpan>("Durasi")
                        .HasColumnType("interval");

                    b.Property<string>("EvaluasiPeserta")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Fasilitator")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FeedbackPeserta")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("JumlahPeserta")
                        .HasColumnType("integer");

                    b.Property<int>("Kategori")
                        .HasColumnType("integer");

                    b.Property<string>("Lokasi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Materi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Penyelenggara")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RekomendasiUntukPelatihanBerikutnya")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("TanggalDiinputkan")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateOnly>("TanggalPelaksanaan")
                        .HasColumnType("date");

                    b.Property<DateTime>("TanggalPembaruanData")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("TargetPeserta")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Pelatihan");
                });

            modelBuilder.Entity("SidDmb.Domain.CollaborationFunction.ModulProdukDanInventory.ManajemenDistribusi.Distribusi", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("AlamatTujuan")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("BiayaPengiriman")
                        .HasColumnType("double precision");

                    b.Property<string>("DokumenPengiriman")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("JumlahProduk")
                        .HasColumnType("integer");

                    b.Property<string>("KontakDistributor")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NamaDistributor")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ProdukId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("TanggalDiinputkan")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("TanggalPembaruanData")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateOnly>("TanggalPengiriman")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("ProdukId");

                    b.ToTable("Distribusi");
                });

            modelBuilder.Entity("SidDmb.Domain.CollaborationFunction.ModulProdukDanInventory.ManajemenProduk.Produk", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("Dekripsi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("HargaProduk")
                        .HasColumnType("double precision");

                    b.Property<int>("Kategori")
                        .HasColumnType("integer");

                    b.Property<string>("LegalitasProduk")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MediaPromosi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("StatusKetersediaan")
                        .HasColumnType("integer");

                    b.Property<int>("StokAwal")
                        .HasColumnType("integer");

                    b.Property<int>("StokSaatIni")
                        .HasColumnType("integer");

                    b.Property<DateTime>("TanggalDiinputkan")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateOnly?>("TanggalKadaluarsa")
                        .HasColumnType("date");

                    b.Property<DateTime>("TanggalPembaruanData")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateOnly>("TanggalProduksiTerakhir")
                        .HasColumnType("date");

                    b.Property<string>("UnitUsahaTerkait")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Produk");
                });

            modelBuilder.Entity("SidDmb.Domain.CollaborationFunction.ModulProdukDanInventory.SertifikasiDanLegalitas.Sertifikasi", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("DokumenSertifikat")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("JenisSertifikasi")
                        .HasColumnType("integer");

                    b.Property<string>("Komentar")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NomorSertifikasi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PemberiSertifikat")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ProdukId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ProsesYangDilalui")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("StatusSertifikasi")
                        .HasColumnType("integer");

                    b.Property<DateTime>("TanggalDiinputkan")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateOnly>("TanggalKadaluarsa")
                        .HasColumnType("date");

                    b.Property<DateTime>("TanggalPembaruanData")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateOnly>("TanggalPenerbitan")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("ProdukId")
                        .IsUnique();

                    b.ToTable("Sertifikasi");
                });

            modelBuilder.Entity("SidDmb.Domain.CollaborationFunction.ModulResearchAndDevelopment.ManajemenDataRiset.DataRiset", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.PrimitiveCollection<string[]>("DaftarJenisDataRiset")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.Property<string>("DekripsiPenelitian")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DokumenPenelitian")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("EntitasPenelitian")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FeedbackKolaborator")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("HasilPenelitian")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("JudulPenelitian")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("KategoriPenelitian")
                        .HasColumnType("integer");

                    b.Property<string>("ManfaatPenelitian")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MetodePengumpulanData")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("StatusPenelitian")
                        .HasColumnType("integer");

                    b.Property<DateTime>("TanggalDiinputkan")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateOnly>("TanggalMulaiPenelitian")
                        .HasColumnType("date");

                    b.Property<DateTime>("TanggalPembaruanData")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateOnly>("TanggalSelesaiPenelitian")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.ToTable("DataRiset");
                });

            modelBuilder.Entity("SidDmb.Domain.CollaborationFunction.ModulResearchAndDevelopment.RekomendasiDanPengembanganProduk.Rekomendasi", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<double>("Anggaran")
                        .HasColumnType("double precision");

                    b.Property<string>("Dekripsi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DokumenPendukung")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FeedbackKolaborator")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("HasilYangDiharapkan")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Judul")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("KategoriPengembangan")
                        .HasColumnType("integer");

                    b.Property<string>("PemberiRekomendasi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ProdukTerkaitId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("StatusImplementasi")
                        .HasColumnType("integer");

                    b.Property<string>("StrategiYangDirekomendasikan")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("TanggalDiinputkan")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("TanggalPembaruanData")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("TimelineRekomendasi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TujuanPengembangan")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ProdukTerkaitId");

                    b.ToTable("Rekomendasi");
                });

            modelBuilder.Entity("SidDmb.Domain.MasterDataFunction.ModulBudaya.ArtefakBudayas.ArtefakBudaya", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("Bahan")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Dekripsi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Dimensi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Foto")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Kategori")
                        .HasColumnType("integer");

                    b.Property<int>("Ketersediaan")
                        .HasColumnType("integer");

                    b.Property<int>("Kondisi")
                        .HasColumnType("integer");

                    b.Property<string>("LokasiPenyimpanan")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NilaiHistoris")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Pengelola")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("TanggalDiinputkan")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("TanggalPembaruanData")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Usia")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ArtefakBudaya");

                    b.HasData(
                        new
                        {
                            Id = "AR001",
                            Bahan = "Batu Andesit",
                            Dekripsi = "Batu berbentuk kenong yang digunakan dalam ritual tradisional masyarakat Kulon Progo.",
                            Dimensi = "Diameter: 50 cm, Tinggi: 40 cm",
                            Foto = "/assets/Artefak_Budaya/Artefak_Batu_Kenong.jpg",
                            Kategori = 0,
                            Ketersediaan = 0,
                            Kondisi = 0,
                            LokasiPenyimpanan = "Museum Kulon Progo",
                            Nama = "Batu Kenong",
                            NilaiHistoris = "Digunakan dalam upacara adat sejak masa Hindu-Buddha.",
                            Pengelola = "Dinas Kebudayaan Kulon Progo",
                            TanggalDiinputkan = new DateTime(2024, 12, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TanggalPembaruanData = new DateTime(2024, 12, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Usia = "Abad ke-10"
                        },
                        new
                        {
                            Id = "AR002",
                            Bahan = "Batu Andesit",
                            Dekripsi = "Prasasti yang ditemukan di kawasan Candi Ijo, mencatat sejarah masa kerajaan Mataram Kuno.",
                            Dimensi = "Tinggi: 1,2 m, Lebar: 70 cm",
                            Foto = "/assets/Artefak_Budaya/Artefak_Batu_Prasasti_Candi_Ijo.jpg",
                            Kategori = 2,
                            Ketersediaan = 0,
                            Kondisi = 0,
                            LokasiPenyimpanan = "Museum Candi Ijo",
                            Nama = "Batu Prasasti Candi Ijo",
                            NilaiHistoris = "Prasasti ini mencatat informasi penting tentang kehidupan pada masa kerajaan Hindu.",
                            Pengelola = "Balai Pelestarian Cagar Budaya Yogyakarta",
                            TanggalDiinputkan = new DateTime(2024, 12, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TanggalPembaruanData = new DateTime(2024, 12, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Usia = "Abad ke-9"
                        },
                        new
                        {
                            Id = "AR003",
                            Bahan = "Batu Andesit",
                            Dekripsi = "Patung Dewa Ganesha yang ditemukan di kompleks Candi Sambisari.",
                            Dimensi = "Tinggi: 60 cm, Lebar: 40 cm",
                            Foto = "/assets/Artefak_Budaya/Artefak_Patung_Ganesha_Candi_Sambisari.jpg",
                            Kategori = 0,
                            Ketersediaan = 0,
                            Kondisi = 0,
                            LokasiPenyimpanan = "Museum Candi Sambisari",
                            Nama = "Patung Ganesha",
                            NilaiHistoris = "Artefak ini mencerminkan pengaruh Hindu pada masa kerajaan Mataram.",
                            Pengelola = "Balai Pelestarian Cagar Budaya Yogyakarta",
                            TanggalDiinputkan = new DateTime(2024, 12, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TanggalPembaruanData = new DateTime(2024, 12, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Usia = "Abad ke-9"
                        },
                        new
                        {
                            Id = "AR004",
                            Bahan = "Batu Andesit",
                            Dekripsi = "Prasasti yang mencatat sejarah wilayah Kedu pada masa kerajaan Mataram Kuno.",
                            Dimensi = "Tinggi: 1,5 m, Lebar: 80 cm",
                            Foto = "/assets/Artefak_Budaya/Artefak_Prasasti_Kedu.jpg",
                            Kategori = 2,
                            Ketersediaan = 0,
                            Kondisi = 0,
                            LokasiPenyimpanan = "Museum Sejarah Kedu",
                            Nama = "Prasasti Kedu",
                            NilaiHistoris = "Prasasti ini berisi informasi penting tentang administrasi kerajaan Mataram.",
                            Pengelola = "Balai Pelestarian Cagar Budaya Jawa Tengah",
                            TanggalDiinputkan = new DateTime(2024, 12, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TanggalPembaruanData = new DateTime(2024, 12, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Usia = "Abad ke-9"
                        },
                        new
                        {
                            Id = "AR005",
                            Bahan = "Batu Andesit",
                            Dekripsi = "Prasasti yang ditemukan di Gunungkidul dan mencatat kehidupan masyarakat setempat.",
                            Dimensi = "Tinggi: 1,3 m, Lebar: 70 cm",
                            Foto = "/assets/Artefak_Budaya/Artefak_Prasasti_Munggur.jpg",
                            Kategori = 2,
                            Ketersediaan = 0,
                            Kondisi = 0,
                            LokasiPenyimpanan = "Museum Gunungkidul",
                            Nama = "Prasasti Munggur",
                            NilaiHistoris = "Prasasti ini mencerminkan tata kehidupan masyarakat desa pada masa kerajaan Mataram.",
                            Pengelola = "Dinas Kebudayaan Gunungkidul",
                            TanggalDiinputkan = new DateTime(2024, 12, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TanggalPembaruanData = new DateTime(2024, 12, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Usia = "Abad ke-10"
                        });
                });

            modelBuilder.Entity("SidDmb.Domain.MasterDataFunction.ModulBudaya.Komentar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ArtefakBudayaId")
                        .HasColumnType("text");

                    b.Property<string>("Isi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("Rating")
                        .HasColumnType("double precision");

                    b.Property<string>("SeniBudayaId")
                        .HasColumnType("text");

                    b.Property<string>("SitusBudayaId")
                        .HasColumnType("text");

                    b.Property<string>("UpacaraBudayaId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ArtefakBudayaId");

                    b.HasIndex("SeniBudayaId");

                    b.HasIndex("SitusBudayaId");

                    b.HasIndex("UpacaraBudayaId");

                    b.ToTable("Komentar");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ArtefakBudayaId = "AR001",
                            Isi = "Batu Kenong memberikan gambaran menarik tentang budaya Hindu-Buddha di Kulon Progo.",
                            Nama = "Fernand Putra",
                            Rating = 4.5
                        },
                        new
                        {
                            Id = 2,
                            ArtefakBudayaId = "AR001",
                            Isi = "Artefak ini sangat penting untuk penelitian tentang tradisi ritual masyarakat Jawa kuno.",
                            Nama = "Peneliti Sejarah",
                            Rating = 5.0
                        },
                        new
                        {
                            Id = 3,
                            ArtefakBudayaId = "AR001",
                            Isi = "Dimensi Batu Kenong mencerminkan simbolisme dalam adat tradisional.",
                            Nama = "Sejarawan Muda",
                            Rating = 4.7000000000000002
                        },
                        new
                        {
                            Id = 4,
                            ArtefakBudayaId = "AR002",
                            Isi = "Batu Prasasti Candi Ijo menyimpan banyak informasi berharga tentang sejarah Mataram.",
                            Nama = "Pelajar Arkeologi",
                            Rating = 4.9000000000000004
                        },
                        new
                        {
                            Id = 5,
                            ArtefakBudayaId = "AR002",
                            Isi = "Sebuah bukti kuat dari masa keemasan kerajaan Hindu di Jawa.",
                            Nama = "Sejarawan Lokal",
                            Rating = 5.0
                        },
                        new
                        {
                            Id = 6,
                            ArtefakBudayaId = "AR002",
                            Isi = "Lokasi penyimpanan dan pelestarian prasasti ini sudah sangat baik.",
                            Nama = "Pengunjung Museum",
                            Rating = 4.7999999999999998
                        },
                        new
                        {
                            Id = 7,
                            ArtefakBudayaId = "AR003",
                            Isi = "Patung Ganesha ini sangat menarik dengan detail yang terjaga.",
                            Nama = "Pecinta Seni",
                            Rating = 4.5999999999999996
                        },
                        new
                        {
                            Id = 8,
                            ArtefakBudayaId = "AR003",
                            Isi = "Representasi Ganesha di patung ini mencerminkan nilai budaya tinggi pada masa lalu.",
                            Nama = "Peneliti Mitologi",
                            Rating = 4.7000000000000002
                        },
                        new
                        {
                            Id = 9,
                            ArtefakBudayaId = "AR003",
                            Isi = "Patung ini menambah daya tarik sejarah kompleks Candi Sambisari.",
                            Nama = "Pengunjung Sambisari",
                            Rating = 4.9000000000000004
                        },
                        new
                        {
                            Id = 10,
                            ArtefakBudayaId = "AR004",
                            Isi = "Prasasti Kedu memberikan wawasan mendalam tentang administrasi Mataram.",
                            Nama = "Mahasiswa Sejarah",
                            Rating = 5.0
                        },
                        new
                        {
                            Id = 11,
                            ArtefakBudayaId = "AR004",
                            Isi = "Artefak ini sangat informatif untuk belajar tentang kerajaan Mataram.",
                            Nama = "Pengunjung Jawa Tengah",
                            Rating = 4.7999999999999998
                        },
                        new
                        {
                            Id = 12,
                            ArtefakBudayaId = "AR004",
                            Isi = "Dimensi besar prasasti ini membuatnya menjadi pusat perhatian.",
                            Nama = "Pecinta Sejarah",
                            Rating = 4.7000000000000002
                        },
                        new
                        {
                            Id = 13,
                            ArtefakBudayaId = "AR005",
                            Isi = "Prasasti Munggur adalah saksi penting kehidupan masyarakat desa Gunungkidul.",
                            Nama = "Sejarawan Desa",
                            Rating = 4.9000000000000004
                        },
                        new
                        {
                            Id = 14,
                            ArtefakBudayaId = "AR005",
                            Isi = "Tulisan di prasasti ini memberikan gambaran tentang tata bahasa masa lalu.",
                            Nama = "Peneliti Bahasa Kuno",
                            Rating = 5.0
                        },
                        new
                        {
                            Id = 15,
                            ArtefakBudayaId = "AR005",
                            Isi = "Prasasti ini adalah salah satu peninggalan budaya paling menarik di wilayah ini.",
                            Nama = "Pengunjung Gunungkidul",
                            Rating = 4.7999999999999998
                        },
                        new
                        {
                            Id = 16,
                            Isi = "Tari Angguk sangat memukau dengan energinya yang menghidupkan suasana. Saya berharap dapat melihatnya lagi.",
                            Nama = "Siti Aisyah",
                            Rating = 4.9000000000000004,
                            SeniBudayaId = "SB001"
                        },
                        new
                        {
                            Id = 17,
                            Isi = "Tari Angguk sangat unik, gerakannya menggambarkan kebersamaan yang menyentuh hati.",
                            Nama = "Joko Prasetyo",
                            Rating = 4.7999999999999998,
                            SeniBudayaId = "SB001"
                        },
                        new
                        {
                            Id = 18,
                            Isi = "Tari Angguk memberikan nuansa kebudayaan yang kental, sangat indah dan layak diapresiasi.",
                            Nama = "Rina Sari",
                            Rating = 4.7000000000000002,
                            SeniBudayaId = "SB001"
                        },
                        new
                        {
                            Id = 19,
                            Isi = "Tari Bedhaya memberikan suasana yang damai dan khidmat, cocok untuk momen upacara besar.",
                            Nama = "Agus Prabowo",
                            Rating = 5.0,
                            SeniBudayaId = "SB002"
                        },
                        new
                        {
                            Id = 20,
                            Isi = "Tari Bedhaya menunjukkan keanggunan yang luar biasa, sangat membanggakan budaya Yogyakarta.",
                            Nama = "Dewi Lestari",
                            Rating = 4.9000000000000004,
                            SeniBudayaId = "SB002"
                        },
                        new
                        {
                            Id = 21,
                            Isi = "Tari Bedhaya sangat elegan, setiap gerakan sangat terkoordinasi dengan baik, membuat saya terpesona.",
                            Nama = "Budi Santoso",
                            Rating = 4.7999999999999998,
                            SeniBudayaId = "SB002"
                        },
                        new
                        {
                            Id = 22,
                            Isi = "Tari Dolalak sangat menghibur dan penuh semangat. Tariannya sangat energik dan membangkitkan semangat juang.",
                            Nama = "Maya Widya",
                            Rating = 4.7000000000000002,
                            SeniBudayaId = "SB003"
                        },
                        new
                        {
                            Id = 23,
                            Isi = "Tari Dolalak membawa energi yang luar biasa, sangat memotivasi dan memberikan kesan yang mendalam.",
                            Nama = "Rudi Setiawan",
                            Rating = 4.9000000000000004,
                            SeniBudayaId = "SB003"
                        },
                        new
                        {
                            Id = 24,
                            Isi = "Tari Dolalak penuh dengan dinamika dan semangat yang sangat menular. Pertunjukan yang luar biasa!",
                            Nama = "Lina Susanti",
                            Rating = 4.7999999999999998,
                            SeniBudayaId = "SB003"
                        },
                        new
                        {
                            Id = 25,
                            Isi = "Tari Gambyong mempesona dengan gerakan yang lembut dan sangat anggun. Saya sangat menikmati setiap detiknya.",
                            Nama = "Eko Yulianto",
                            Rating = 4.9000000000000004,
                            SeniBudayaId = "SB004"
                        },
                        new
                        {
                            Id = 26,
                            Isi = "Tari Gambyong sangat memukau dengan keselarasan antara musik dan gerakan penarinya.",
                            Nama = "Fanny Farida",
                            Rating = 4.7999999999999998,
                            SeniBudayaId = "SB004"
                        },
                        new
                        {
                            Id = 27,
                            Isi = "Tari Gambyong menunjukkan kebudayaan yang kaya akan nilai estetika, sangat mengagumkan!",
                            Nama = "Rina Saraswati",
                            Rating = 5.0,
                            SeniBudayaId = "SB004"
                        },
                        new
                        {
                            Id = 28,
                            Isi = "Tari Kuda Lumping membawa suasana yang seru dan penuh semangat, sangat menghibur penonton.",
                            Nama = "Mita Anggraini",
                            Rating = 4.7000000000000002,
                            SeniBudayaId = "SB005"
                        },
                        new
                        {
                            Id = 29,
                            Isi = "Tari Kuda Lumping sangat seru dengan gerakan yang energik dan membawa nuansa magis.",
                            Nama = "Iwan Setiawan",
                            Rating = 4.7999999999999998,
                            SeniBudayaId = "SB005"
                        },
                        new
                        {
                            Id = 30,
                            Isi = "Tari Kuda Lumping memperlihatkan kekuatan dan keindahan gerakan yang sangat memikat.",
                            Nama = "Siti Amalia",
                            Rating = 4.9000000000000004,
                            SeniBudayaId = "SB005"
                        },
                        new
                        {
                            Id = 31,
                            Isi = "Candi Sambisari adalah situs yang sangat memukau dan penuh sejarah. Saya sangat menghargai upaya pelestariannya.",
                            Nama = "Budi Santoso",
                            Rating = 5.0,
                            SitusBudayaId = "SB001"
                        },
                        new
                        {
                            Id = 32,
                            Isi = "Gua Maria Tritis memberikan pengalaman spiritual yang mendalam, pemandangan alamnya juga luar biasa.",
                            Nama = "Dewi Lestari",
                            Rating = 4.7999999999999998,
                            SitusBudayaId = "SB002"
                        },
                        new
                        {
                            Id = 33,
                            Isi = "Gua Rancang Kencono menawarkan pengalaman petualangan yang luar biasa. Formasi gua sangat indah dan mempesona.",
                            Nama = "Rina Sari",
                            Rating = 4.9000000000000004,
                            SitusBudayaId = "SB003"
                        },
                        new
                        {
                            Id = 34,
                            Isi = "Situs Gunung Wukir adalah situs yang sangat kaya akan nilai sejarah. Keindahan alamnya juga tidak kalah menarik.",
                            Nama = "Eko Yulianto",
                            Rating = 4.9000000000000004,
                            SitusBudayaId = "SB004"
                        },
                        new
                        {
                            Id = 35,
                            Isi = "Situs Mangir memberikan wawasan baru tentang kerajaan Mataram Kuno, sangat mendalam dan penuh informasi.",
                            Nama = "Maya Widya",
                            Rating = 4.7000000000000002,
                            SitusBudayaId = "SB005"
                        },
                        new
                        {
                            Id = 36,
                            Isi = "Candi Sambisari adalah tempat yang sangat mengesankan. Saya menikmati setiap detil arsitekturnya.",
                            Nama = "Andi Wijaya",
                            Rating = 4.7999999999999998,
                            SitusBudayaId = "SB001"
                        },
                        new
                        {
                            Id = 37,
                            Isi = "Gua Maria Tritis sangat tenang dan damai. Tempat yang cocok untuk merenung dan berdoa.",
                            Nama = "Siti Khadijah",
                            Rating = 5.0,
                            SitusBudayaId = "SB002"
                        },
                        new
                        {
                            Id = 38,
                            Isi = "Gua Rancang Kencono sangat menantang. Pemandangannya menakjubkan dan cocok bagi pecinta alam.",
                            Nama = "Haris Setiawan",
                            Rating = 4.5999999999999996,
                            SitusBudayaId = "SB003"
                        },
                        new
                        {
                            Id = 39,
                            Isi = "Situs Gunung Wukir memberikan nuansa sejarah yang kuat, tempat yang sangat bersejarah dan penuh nilai budaya.",
                            Nama = "Lina Hartini",
                            Rating = 4.9000000000000004,
                            SitusBudayaId = "SB004"
                        },
                        new
                        {
                            Id = 40,
                            Isi = "Situs Mangir benar-benar menarik, ada banyak cerita yang bisa dipelajari dari sini.",
                            Nama = "Anton Dwi",
                            Rating = 4.7000000000000002,
                            SitusBudayaId = "SB005"
                        },
                        new
                        {
                            Id = 41,
                            Isi = "Saya sangat menikmati kunjungan saya ke Candi Sambisari. Tempat yang sangat historis dan penuh pesona.",
                            Nama = "Rudi Hartono",
                            Rating = 5.0,
                            SitusBudayaId = "SB001"
                        },
                        new
                        {
                            Id = 42,
                            Isi = "Gua Maria Tritis adalah tempat yang sangat spiritual. Sangat menenangkan untuk berdoa di sana.",
                            Nama = "Indah Sari",
                            Rating = 5.0,
                            SitusBudayaId = "SB002"
                        },
                        new
                        {
                            Id = 43,
                            Isi = "Gua Rancang Kencono adalah tempat yang cocok untuk berpetualang. Keindahan gua dan alamnya luar biasa.",
                            Nama = "Joko Prasetyo",
                            Rating = 4.7000000000000002,
                            SitusBudayaId = "SB003"
                        },
                        new
                        {
                            Id = 44,
                            Isi = "Situs Gunung Wukir penuh dengan keindahan alam dan sejarah. Benar-benar menarik untuk dipelajari.",
                            Nama = "Eka Rizki",
                            Rating = 4.7999999999999998,
                            SitusBudayaId = "SB004"
                        },
                        new
                        {
                            Id = 45,
                            Isi = "Situs Mangir adalah destinasi yang harus dikunjungi bagi penggemar sejarah. Banyak hal yang bisa dipelajari di sini.",
                            Nama = "Nina Ayu",
                            Rating = 4.9000000000000004,
                            SitusBudayaId = "SB005"
                        },
                        new
                        {
                            Id = 46,
                            Isi = "Labuhan Glagah adalah upacara yang penuh dengan nilai sejarah dan budaya. Sangat mengesankan.",
                            Nama = "Agus Subekti",
                            Rating = 5.0,
                            UpacaraBudayaId = "UB001"
                        },
                        new
                        {
                            Id = 47,
                            Isi = "Labuhan Merapi memberikan pengalaman spiritual yang luar biasa. Prosesi sangat terhormat.",
                            Nama = "Dian Purnama",
                            Rating = 4.7999999999999998,
                            UpacaraBudayaId = "UB002"
                        },
                        new
                        {
                            Id = 48,
                            Isi = "Labuhan Parangkusumo selalu menyentuh hati, suasananya sangat tenang dan penuh makna.",
                            Nama = "Rina Santosa",
                            Rating = 5.0,
                            UpacaraBudayaId = "UB003"
                        },
                        new
                        {
                            Id = 49,
                            Isi = "Ngalap Berkah di Pantai Ngobaran adalah acara yang sangat mendalam, penuh dengan doa dan harapan.",
                            Nama = "Haris Iskandar",
                            Rating = 4.9000000000000004,
                            UpacaraBudayaId = "UB004"
                        },
                        new
                        {
                            Id = 50,
                            Isi = "Sekaten Sleman adalah pesta budaya yang sangat meriah dan menyenangkan. Sangat layak untuk dikunjungi.",
                            Nama = "Maya Sekar",
                            Rating = 4.7000000000000002,
                            UpacaraBudayaId = "UB005"
                        },
                        new
                        {
                            Id = 51,
                            Isi = "Labuhan Glagah memberikan nuansa yang sangat khas Yogyakarta. Sangat berkesan dan mendalam.",
                            Nama = "Budi Prasetyo",
                            Rating = 4.7999999999999998,
                            UpacaraBudayaId = "UB001"
                        },
                        new
                        {
                            Id = 52,
                            Isi = "Labuhan Merapi adalah upacara yang mempesona dan sangat penuh dengan makna spiritual.",
                            Nama = "Siti Aisyah",
                            Rating = 5.0,
                            UpacaraBudayaId = "UB002"
                        },
                        new
                        {
                            Id = 53,
                            Isi = "Labuhan Parangkusumo menawarkan kedamaian dan sangat cocok untuk meditasi.",
                            Nama = "Rudi Hartono",
                            Rating = 4.9000000000000004,
                            UpacaraBudayaId = "UB003"
                        },
                        new
                        {
                            Id = 54,
                            Isi = "Ngalap Berkah adalah pengalaman spiritual yang sangat berharga bagi saya. Sangat menyentuh hati.",
                            Nama = "Dewi Yuliana",
                            Rating = 5.0,
                            UpacaraBudayaId = "UB004"
                        },
                        new
                        {
                            Id = 55,
                            Isi = "Sekaten Sleman adalah acara yang penuh warna dan sangat memikat. Terbaik untuk wisata budaya.",
                            Nama = "Agus Wijaya",
                            Rating = 4.7999999999999998,
                            UpacaraBudayaId = "UB005"
                        },
                        new
                        {
                            Id = 56,
                            Isi = "Labuhan Glagah sangat menarik. Saya akan datang lagi untuk menyaksikan upacara ini.",
                            Nama = "Lina Kurnia",
                            Rating = 5.0,
                            UpacaraBudayaId = "UB001"
                        },
                        new
                        {
                            Id = 57,
                            Isi = "Labuhan Merapi adalah acara yang memberikan kedamaian, sangat menghargai budaya lokal.",
                            Nama = "Anton Subroto",
                            Rating = 4.7000000000000002,
                            UpacaraBudayaId = "UB002"
                        },
                        new
                        {
                            Id = 58,
                            Isi = "Labuhan Parangkusumo adalah tempat yang sangat cocok untuk berdoa dan merenung.",
                            Nama = "Mira Oktaviani",
                            Rating = 5.0,
                            UpacaraBudayaId = "UB003"
                        },
                        new
                        {
                            Id = 59,
                            Isi = "Ngalap Berkah Pantai Ngobaran adalah upacara yang penuh kesakralan dan kedamaian. Sangat menyentuh.",
                            Nama = "Hadi Pranata",
                            Rating = 5.0,
                            UpacaraBudayaId = "UB004"
                        },
                        new
                        {
                            Id = 60,
                            Isi = "Sekaten Sleman adalah perayaan yang luar biasa, penuh dengan acara menarik dan penuh semangat.",
                            Nama = "Sari Lestari",
                            Rating = 4.9000000000000004,
                            UpacaraBudayaId = "UB005"
                        });
                });

            modelBuilder.Entity("SidDmb.Domain.MasterDataFunction.ModulBudaya.SeniBudayas.SeniBudaya", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("Dekripsi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<TimeSpan>("DurasiPentunjukan")
                        .HasColumnType("interval");

                    b.PrimitiveCollection<string[]>("FasilitasPertunjukan")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.Property<double>("HargaTiket")
                        .HasColumnType("double precision");

                    b.Property<int>("Kategori")
                        .HasColumnType("integer");

                    b.Property<string>("LokasiPertunjukan")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MediaPromosi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NamaPelakuSeni")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PeraturanKhusus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("TanggalDiinputkan")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("TanggalPembaruanData")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("WaktuPertunjukan")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("SeniBudaya");

                    b.HasData(
                        new
                        {
                            Id = "SB001",
                            Dekripsi = "Tari Angguk adalah tarian tradisional khas Yogyakarta yang menggambarkan sukacita masyarakat dalam menyambut kedatangan tamu atau acara tertentu.",
                            DurasiPentunjukan = new TimeSpan(0, 2, 0, 0, 0),
                            FasilitasPertunjukan = new[] { "Panggung Utama", "Tempat Duduk Penonton", "Sistem Audio" },
                            HargaTiket = 20000.0,
                            Kategori = 0,
                            LokasiPertunjukan = "Padepokan Seni Angguk, Yogyakarta",
                            MediaPromosi = "/assets/Seni_Budaya/Seni_Tari_Angguk.jpg",
                            Nama = "Tari Angguk",
                            NamaPelakuSeni = "Grup Seni Angguk Yogyakarta",
                            PeraturanKhusus = "Dilarang merekam pertunjukan tanpa izin",
                            TanggalDiinputkan = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TanggalPembaruanData = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WaktuPertunjukan = "Sabtu, 19:00 - 21:00"
                        },
                        new
                        {
                            Id = "SB002",
                            Dekripsi = "Tari Bedhaya adalah tarian tradisional yang menggambarkan kedamaian dan kebesaran kerajaan, sering kali ditampilkan dalam upacara besar di istana.",
                            DurasiPentunjukan = new TimeSpan(0, 1, 30, 0, 0),
                            FasilitasPertunjukan = new[] { "Panggung Keraton", "Tempat Duduk VIP", "Sistem Pencahayaan" },
                            HargaTiket = 50000.0,
                            Kategori = 0,
                            LokasiPertunjukan = "Keraton Yogyakarta",
                            MediaPromosi = "/assets/Seni_Budaya/Seni_Tari_Bedhaya.jpg",
                            Nama = "Tari Bedhaya",
                            NamaPelakuSeni = "Grup Tari Bedhaya Yogyakarta",
                            PeraturanKhusus = "Dilarang memakai pakaian sembarangan",
                            TanggalDiinputkan = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TanggalPembaruanData = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WaktuPertunjukan = "Minggu, 18:00 - 20:00"
                        },
                        new
                        {
                            Id = "SB003",
                            Dekripsi = "Tari Dolalak merupakan tarian rakyat yang menceritakan kisah perjuangan para pahlawan dan keperkasaan mereka dalam melawan penjajahan.",
                            DurasiPentunjukan = new TimeSpan(0, 2, 0, 0, 0),
                            FasilitasPertunjukan = new[] { "Panggung Terbuka", "Tempat Duduk Penonton", "Sistem Suara" },
                            HargaTiket = 15000.0,
                            Kategori = 0,
                            LokasiPertunjukan = "Alun-alun Yogyakarta",
                            MediaPromosi = "/assets/Seni_Budaya/Seni_Tari_Dolalak.jpg",
                            Nama = "Tari Dolalak",
                            NamaPelakuSeni = "Grup Seni Dolalak Yogyakarta",
                            PeraturanKhusus = "Tidak boleh membawa makanan atau minuman",
                            TanggalDiinputkan = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TanggalPembaruanData = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WaktuPertunjukan = "Jumat, 17:30 - 19:30"
                        },
                        new
                        {
                            Id = "SB004",
                            Dekripsi = "Tari Gambyong adalah tarian klasik dari Yogyakarta yang menggambarkan kelembutan dan keanggunan para wanita dalam kehidupan sehari-hari.",
                            DurasiPentunjukan = new TimeSpan(0, 1, 30, 0, 0),
                            FasilitasPertunjukan = new[] { "Panggung Tertutup", "Kursi Penonton", "Sistem Pencahayaan" },
                            HargaTiket = 30000.0,
                            Kategori = 0,
                            LokasiPertunjukan = "Taman Sari Yogyakarta",
                            MediaPromosi = "/assets/Seni_Budaya/Seni_Tari_Gambyong.jpg",
                            Nama = "Tari Gambyong",
                            NamaPelakuSeni = "Grup Tari Gambyong Yogyakarta",
                            PeraturanKhusus = "Silakan menggunakan pakaian formal untuk acara ini",
                            TanggalDiinputkan = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TanggalPembaruanData = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WaktuPertunjukan = "Sabtu, 20:00 - 22:00"
                        },
                        new
                        {
                            Id = "SB005",
                            Dekripsi = "Tari Kuda Lumping adalah tarian tradisional yang menggambarkan keberanian dan semangat juang dengan unsur kesurupan dan tarian yang dinamis.",
                            DurasiPentunjukan = new TimeSpan(0, 2, 0, 0, 0),
                            FasilitasPertunjukan = new[] { "Panggung Luar Ruangan", "Area Penonton Terbuka", "Tempat Ganti" },
                            HargaTiket = 25000.0,
                            Kategori = 0,
                            LokasiPertunjukan = "Padepokan Kuda Lumping Yogyakarta",
                            MediaPromosi = "/assets/Seni_Budaya/Seni_Tari_Kuda_Lumping.jpg",
                            Nama = "Tari Kuda Lumping",
                            NamaPelakuSeni = "Grup Seni Kuda Lumping Yogyakarta",
                            PeraturanKhusus = "Pengunjung yang sensitif terhadap suara keras disarankan tidak hadir",
                            TanggalDiinputkan = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TanggalPembaruanData = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WaktuPertunjukan = "Minggu, 20:00 - 22:00"
                        });
                });

            modelBuilder.Entity("SidDmb.Domain.MasterDataFunction.ModulBudaya.SitusBudayas.SitusBudaya", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("Alamat")
                        .IsRequired()
                        .HasColumnType("text");

                    b.PrimitiveCollection<string[]>("DaftarFasilitas")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.Property<string>("Dekripsi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FotoPromosi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("HargaTiketMasuk")
                        .HasColumnType("double precision");

                    b.Property<string>("JamOperasional")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Kategori")
                        .HasColumnType("integer");

                    b.Property<string>("KontakInformasi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Point>("KoordinatLokasi")
                        .IsRequired()
                        .HasColumnType("geometry");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PengelolaSitus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PeraturanKhusus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<DateTime>("TanggalDiinputkan")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("TanggalPembaruanData")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("SitusBudaya");

                    b.HasData(
                        new
                        {
                            Id = "SB001",
                            Alamat = "Jl. Candi Sambisari, Purwomartani, Kalasan, Sleman, Yogyakarta",
                            DaftarFasilitas = new[] { "Panggung Utama", "Tempat Duduk Penonton", "Sistem Audio" },
                            Dekripsi = "Candi Sambisari adalah situs sejarah yang terletak di Yogyakarta, berasal dari abad ke-9 dan merupakan peninggalan kerajaan Mataram Kuno.",
                            FotoPromosi = "/assets/Situs_Budaya/Situs_Candi_Sambisari.jpg",
                            HargaTiketMasuk = 20000.0,
                            JamOperasional = "08:00 - 17:00",
                            Kategori = 0,
                            KontakInformasi = "+62 812-3456-7890",
                            KoordinatLokasi = (NetTopologySuite.Geometries.Point)new NetTopologySuite.IO.WKTReader().Read("SRID=0;POINT (110.356384 -7.726992)"),
                            Nama = "Candi Sambisari",
                            PengelolaSitus = "Balai Pelestarian Cagar Budaya Yogyakarta",
                            PeraturanKhusus = "Dilarang membawa makanan dan minuman ke area candi.",
                            Status = 0,
                            TanggalDiinputkan = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TanggalPembaruanData = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = "SB002",
                            Alamat = "Dusun Tritis, Purworejo, Yogyakarta",
                            DaftarFasilitas = new[] { "Tempat Doa", "Area Parkir", "Toilet Umum" },
                            Dekripsi = "Gua Maria Tritis adalah situs ziarah yang terletak di Gunung Tritis, Yogyakarta, dikenal dengan kesan spiritual dan pemandangan alamnya.",
                            FotoPromosi = "/assets/Situs_Budaya/Situs_Gua_Maria_Tritis.jpg",
                            HargaTiketMasuk = 10000.0,
                            JamOperasional = "06:00 - 18:00",
                            Kategori = 1,
                            KontakInformasi = "+62 878-2123-4567",
                            KoordinatLokasi = (NetTopologySuite.Geometries.Point)new NetTopologySuite.IO.WKTReader().Read("SRID=0;POINT (110.552711 -8.082159)"),
                            Nama = "Gua Maria Tritis",
                            PengelolaSitus = "Paroki Setempat",
                            PeraturanKhusus = "Dilarang merokok dan membawa makanan di area ziarah.",
                            Status = 0,
                            TanggalDiinputkan = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TanggalPembaruanData = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = "SB003",
                            Alamat = "Dusun Rancang Kencono, Nglanggeran, Yogyakarta",
                            DaftarFasilitas = new[] { "Jalur Pendakian", "Area Istirahat", "Pemandu Wisata" },
                            Dekripsi = "Gua Rancang Kencono adalah situs alami yang dikenal dengan keindahan formasi batuan stalaktit dan stalagmit serta keasrian alam sekitar.",
                            FotoPromosi = "/assets/Situs_Budaya/Situs_Gua_Rancang_kencono.jpg",
                            HargaTiketMasuk = 15000.0,
                            JamOperasional = "08:00 - 16:00",
                            Kategori = 2,
                            KontakInformasi = "+62 811-6347-897",
                            KoordinatLokasi = (NetTopologySuite.Geometries.Point)new NetTopologySuite.IO.WKTReader().Read("SRID=0;POINT (110.492699 -7.9495)"),
                            Nama = "Gua Rancang Kencono",
                            PengelolaSitus = "Dinas Pariwisata Kabupaten Gunungkidul",
                            PeraturanKhusus = "Tidak diperbolehkan memasuki gua tanpa pemandu.",
                            Status = 0,
                            TanggalDiinputkan = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TanggalPembaruanData = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = "SB004",
                            Alamat = "Gunung Wukir, Sleman, Yogyakarta",
                            DaftarFasilitas = new[] { "Area Parkir", "Tempat Istirahat", "Papan Informasi" },
                            Dekripsi = "Situs Gunung Wukir adalah peninggalan budaya Hindu-Buddha yang ditemukan di kawasan Gunung Wukir, Yogyakarta, dengan berbagai prasasti kuno.",
                            FotoPromosi = "/assets/Situs_Budaya/Situs_Gunung_Wukir.jpg",
                            HargaTiketMasuk = 25000.0,
                            JamOperasional = "08:00 - 17:00",
                            Kategori = 0,
                            KontakInformasi = "+62 858-3423-6237",
                            KoordinatLokasi = (NetTopologySuite.Geometries.Point)new NetTopologySuite.IO.WKTReader().Read("SRID=0;POINT (110.34993 -7.784865)"),
                            Nama = "Situs Gunung Wukir",
                            PengelolaSitus = "Balai Pelestarian Cagar Budaya Yogyakarta",
                            PeraturanKhusus = "Dilarang membawa tas besar dan makanan ke area situs.",
                            Status = 0,
                            TanggalDiinputkan = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TanggalPembaruanData = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = "SB005",
                            Alamat = "Desa Mangir, Bantul, Yogyakarta",
                            DaftarFasilitas = new[] { "Tempat Duduk", "Toilet Umum", "Papan Penunjuk Arah" },
                            Dekripsi = "Situs Mangir adalah situs sejarah yang menyimpan artefak-artefak penting dari era kerajaan Mataram Kuno, terletak di Kabupaten Bantul.",
                            FotoPromosi = "/assets/Situs_Budaya/Situs_Mangir.jpg",
                            HargaTiketMasuk = 20000.0,
                            JamOperasional = "07:00 - 17:00",
                            Kategori = 0,
                            KontakInformasi = "+62 821-4321-8765",
                            KoordinatLokasi = (NetTopologySuite.Geometries.Point)new NetTopologySuite.IO.WKTReader().Read("SRID=0;POINT (110.319917 -7.877201)"),
                            Nama = "Situs Mangir",
                            PengelolaSitus = "Dinas Kebudayaan Yogyakarta",
                            PeraturanKhusus = "Dilarang membawa benda tajam dan minuman keras.",
                            Status = 0,
                            TanggalDiinputkan = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TanggalPembaruanData = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("SidDmb.Domain.MasterDataFunction.ModulBudaya.UpacaraBudayas.UpacaraBudaya", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("Dekripsi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<TimeSpan>("Durasi")
                        .HasColumnType("interval");

                    b.PrimitiveCollection<string[]>("FasilitasPendukung")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.Property<int>("JumlahUpacara")
                        .HasColumnType("integer");

                    b.Property<int>("Kategori")
                        .HasColumnType("integer");

                    b.Property<string>("LokasiPelaksanaan")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MediaPromosi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PeraturanKhusus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PihakTerlibat")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RangkaianAcara")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("TanggalDiinputkan")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("TanggalPembaruanData")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("WaktuPelaksanaan")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("UpacaraBudaya");

                    b.HasData(
                        new
                        {
                            Id = "UB001",
                            Dekripsi = "Upacara Labuhan Glagah adalah tradisi masyarakat Yogyakarta sebagai bentuk penghormatan terhadap alam dan leluhur.",
                            Durasi = new TimeSpan(0, 2, 0, 0, 0),
                            FasilitasPendukung = new[] { "Panggung Utama", "Tempat Duduk Penonton", "Sistem Audio" },
                            JumlahUpacara = 200,
                            Kategori = 1,
                            LokasiPelaksanaan = "Pantai Glagah, Kulon Progo",
                            MediaPromosi = "/assets/Upacara_Budaya/Upacara_Labuhan_Glagah.jpg",
                            Nama = "Labuhan Glagah",
                            PeraturanKhusus = "Dilarang membawa benda terlarang saat prosesi.",
                            PihakTerlibat = "Masyarakat lokal, Dinas Kebudayaan Yogyakarta, Pekerja Seni",
                            RangkaianAcara = "Pembukaan, prosesi labuhan, doa bersama, penutupan.",
                            TanggalDiinputkan = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TanggalPembaruanData = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WaktuPelaksanaan = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = "UB002",
                            Dekripsi = "Labuhan Merapi adalah upacara adat untuk menghormati gunung Merapi sebagai simbol kehidupan dan kemakmuran.",
                            Durasi = new TimeSpan(0, 3, 0, 0, 0),
                            FasilitasPendukung = new[] { "Tempat Parkir", "Panggung Budaya", "Sistem Keamanan" },
                            JumlahUpacara = 150,
                            Kategori = 1,
                            LokasiPelaksanaan = "Kawasan Gunung Merapi, Sleman",
                            MediaPromosi = "/assets/Upacara_Budaya/Upacara_Labuhan_Merapi.jpg",
                            Nama = "Labuhan Merapi",
                            PeraturanKhusus = "Hanya warga sekitar yang boleh ikut serta dalam prosesi utama.",
                            PihakTerlibat = "Masyarakat sekitar, Pemerintah Daerah, Dinas Kebudayaan Yogyakarta",
                            RangkaianAcara = "Doa bersama, persembahan sesaji, parade budaya.",
                            TanggalDiinputkan = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TanggalPembaruanData = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WaktuPelaksanaan = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = "UB003",
                            Dekripsi = "Upacara Labuhan Parangkusumo dilaksanakan untuk memohon keselamatan dan kesejahteraan bagi masyarakat pesisir.",
                            Durasi = new TimeSpan(0, 3, 0, 0, 0),
                            FasilitasPendukung = new[] { "Tempat Ibadah", "Area Parkir", "Panggung Hiburan" },
                            JumlahUpacara = 250,
                            Kategori = 1,
                            LokasiPelaksanaan = "Pantai Parangkusumo, Bantul",
                            MediaPromosi = "/assets/Upacara_Budaya/Upacara_Labuhan_Parangkusumo.jpg",
                            Nama = "Labuhan Parangkusumo",
                            PeraturanKhusus = "Dilarang membawa alat elektronik selama prosesi.",
                            PihakTerlibat = "Pemerintah Daerah, Masyarakat Pesisir, Budayawan",
                            RangkaianAcara = "Prosesi Labuhan, doa keselamatan, pelarungan sesaji.",
                            TanggalDiinputkan = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TanggalPembaruanData = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WaktuPelaksanaan = new DateTime(2025, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = "UB004",
                            Dekripsi = "Upacara Ngalap Berkah di Pantai Ngobaran adalah tradisi untuk memohon keberkahan hidup melalui alam.",
                            Durasi = new TimeSpan(0, 4, 0, 0, 0),
                            FasilitasPendukung = new[] { "Tempat Ibadah", "Area Panggung", "Tempat Parkir" },
                            JumlahUpacara = 300,
                            Kategori = 1,
                            LokasiPelaksanaan = "Pantai Ngobaran, Gunungkidul",
                            MediaPromosi = "/assets/Upacara_Budaya/Upacara_Ngalap_Berkah_Pantai_Ngobaran.jpg",
                            Nama = "Ngalap Berkah Pantai Ngobaran",
                            PeraturanKhusus = "Dilarang merusak alam selama prosesi.",
                            PihakTerlibat = "Masyarakat Gunungkidul, Dinas Pariwisata, Budayawan",
                            RangkaianAcara = "Doa bersama, pelarungan sesaji ke laut, tarian budaya.",
                            TanggalDiinputkan = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TanggalPembaruanData = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WaktuPelaksanaan = new DateTime(2025, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = "UB005",
                            Dekripsi = "Sekaten Sleman adalah perayaan budaya yang digelar untuk merayakan hari jadi Kabupaten Sleman.",
                            Durasi = new TimeSpan(0, 5, 0, 0, 0),
                            FasilitasPendukung = new[] { "Tempat Duduk Penonton", "Area Stand Makanan", "Panggung Hiburan" },
                            JumlahUpacara = 400,
                            Kategori = 1,
                            LokasiPelaksanaan = "Alun-Alun Sleman",
                            MediaPromosi = "/assets/Upacara_Budaya/Upacara_Sekaten_Sleman.jpg",
                            Nama = "Sekaten Sleman",
                            PeraturanKhusus = "Patuhi aturan keamanan dan kebersihan selama acara berlangsung.",
                            PihakTerlibat = "Pemerintah Daerah Sleman, Masyarakat Sleman, Pengusaha Lokal",
                            RangkaianAcara = "Pawai budaya, pertunjukan seni, pasar rakyat.",
                            TanggalDiinputkan = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TanggalPembaruanData = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WaktuPelaksanaan = new DateTime(2025, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("SidDmb.Domain.MasterDataFunction.ModulPreneur.ProdukLokals.ProdukLokal", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("BahanUtama")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Dekripsi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("Harga")
                        .HasColumnType("double precision");

                    b.Property<int>("Kategori")
                        .HasColumnType("integer");

                    b.Property<string>("KontakInformasi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LegalitasDanSertifikat")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MediaPromosi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("StatusKetersediaan")
                        .HasColumnType("integer");

                    b.Property<DateTime>("TanggalDiinputkan")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("TanggalKadaluarsa")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("TanggalPembaruanData")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("TanggalProduksiTerakhir")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("UnitUsahaId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UnitUsahaId");

                    b.ToTable("ProdukLokal");
                });

            modelBuilder.Entity("SidDmb.Domain.MasterDataFunction.ModulPreneur.UnitUsahas.UnitUsaha", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("Alamat")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Dekripsi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("JumlahKaryawan")
                        .HasColumnType("integer");

                    b.Property<int>("Kategori")
                        .HasColumnType("integer");

                    b.Property<string>("KontakInformasi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Legalitas")
                        .HasColumnType("integer");

                    b.Property<string>("MediaPromosi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PemilikUsaha")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateOnly>("TanggalBerdiri")
                        .HasColumnType("date");

                    b.Property<DateTime>("TanggalDiinputkan")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("TanggalPembaruanData")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Point>("TitikKoordinat")
                        .IsRequired()
                        .HasColumnType("geometry");

                    b.HasKey("Id");

                    b.ToTable("UnitUsaha");
                });

            modelBuilder.Entity("SidDmb.Domain.MasterDataFunction.ModulPrima.KegiatanPrimas.KegiatanPrima", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<double>("AnggaranKegiatan")
                        .HasColumnType("double precision");

                    b.Property<string>("Dekripsi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DokumentasiKegiatan")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<TimeSpan>("Durasi")
                        .HasColumnType("interval");

                    b.Property<string>("Fasilitator")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FeedbackPeserta")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("HasilKegiatan")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Jenis")
                        .HasColumnType("integer");

                    b.Property<int>("JumlahPeserta")
                        .HasColumnType("integer");

                    b.Property<string>("KelompokPrimaId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Lokasi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RekomendasiUntukKegiatanBerikutnya")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("TanggalDiinputkan")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateOnly>("TanggalPelaksanaan")
                        .HasColumnType("date");

                    b.Property<DateTime>("TanggalPembaruanData")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("KelompokPrimaId");

                    b.ToTable("KegiatanPrima");
                });

            modelBuilder.Entity("SidDmb.Domain.MasterDataFunction.ModulPrima.KelompokPrimas.KelompokPrima", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("Alamat")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Dekripsi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("FokusKegiatan")
                        .HasColumnType("integer");

                    b.Property<int>("JumlahAnggota")
                        .HasColumnType("integer");

                    b.Property<int>("JumlahProgramDilaksanakan")
                        .HasColumnType("integer");

                    b.Property<string>("KetuaKelompok")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("KontakInformasi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MediaPromosi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ProgramUnggulan")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TahunBerdiri")
                        .HasColumnType("integer");

                    b.Property<DateTime>("TanggalDiinputkan")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("TanggalPembaruanData")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("KelompokPrima");
                });

            modelBuilder.Entity("SidDmb.Domain.MasterDataFunction.ModulWisata.DestinasiWisatas.DestinasiWisata", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("Alamat")
                        .IsRequired()
                        .HasColumnType("text");

                    b.PrimitiveCollection<string[]>("DaftarAktivitas")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.PrimitiveCollection<string[]>("DaftarFasilitas")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.Property<string>("Deskripsi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("HargaTiketMasuk")
                        .HasColumnType("double precision");

                    b.Property<string>("InformasiKontak")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("JamOperasional")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Kategori")
                        .HasColumnType("integer");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PengelolaDestinasi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("StatusOperasional")
                        .HasColumnType("integer");

                    b.Property<DateTime>("TanggalDiinputkan")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("TanggalPembaruanData")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Point>("TitikKoordinat")
                        .IsRequired()
                        .HasColumnType("geography (point)");

                    b.HasKey("Id");

                    b.ToTable("DestinasiWisata");
                });

            modelBuilder.Entity("SidDmb.Domain.MasterDataFunction.ModulWisata.KalenderAcaras.KalenderAcara", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<int>("BatasKuotaPeserta")
                        .HasColumnType("integer");

                    b.Property<string>("DekripsiAcara")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("HargaTiketAcara")
                        .HasColumnType("double precision");

                    b.Property<int>("Kategori")
                        .HasColumnType("integer");

                    b.Property<string>("KontakInformasi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LokasiAcara")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MediaPromosi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NamaAcara")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PenanggungJawab")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("RatingAcara")
                        .HasColumnType("double precision");

                    b.Property<string>("SponsorAcara")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("StatusPendaftaran")
                        .HasColumnType("integer");

                    b.Property<DateTime>("TanggalDanWaktu")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("TanggalDiinputkan")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("TanggalPembaruanData")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("TargetPesertaAcara")
                        .HasColumnType("integer");

                    b.Property<string>("TautanPendaftaran")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("KalenderAcara");
                });

            modelBuilder.Entity("SidDmb.Domain.MasterDataFunction.ModulWisata.LaporanKunjungans.LaporanKunjungan", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("DestinasiWisataId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<TimeSpan>("DurasiKunjungan")
                        .HasColumnType("interval");

                    b.Property<int>("JumlahWisatawanDomestik")
                        .HasColumnType("integer");

                    b.Property<int>("JumlahWisatawanInternasional")
                        .HasColumnType("integer");

                    b.Property<string>("KomentarPengunjung")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("RatingPengunjung")
                        .HasColumnType("double precision");

                    b.Property<DateTime>("TanggalDiinputkan")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("TanggalKunjungan")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("TanggalPembaruanData")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("TiketTerjual")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("DestinasiWisataId");

                    b.ToTable("LaporanKunjungan");
                });

            modelBuilder.Entity("DataRisetKolaborator", b =>
                {
                    b.HasOne("SidDmb.Domain.CollaborationFunction.ModulResearchAndDevelopment.ManajemenDataRiset.DataRiset", null)
                        .WithMany()
                        .HasForeignKey("DaftarDataRisetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SidDmb.Domain.CollaborationFunction.Kolaborator", null)
                        .WithMany()
                        .HasForeignKey("DaftarKolaboratorPenelitianId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DistribusiKolaborator", b =>
                {
                    b.HasOne("SidDmb.Domain.CollaborationFunction.ModulProdukDanInventory.ManajemenDistribusi.Distribusi", null)
                        .WithMany()
                        .HasForeignKey("DaftarDistribusiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SidDmb.Domain.CollaborationFunction.Kolaborator", null)
                        .WithMany()
                        .HasForeignKey("DaftarKolaboratorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EventKolaborator", b =>
                {
                    b.HasOne("SidDmb.Domain.CollaborationFunction.ModulManajemenEvent.PengelolaanEvent.Event", null)
                        .WithMany()
                        .HasForeignKey("DaftarEventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SidDmb.Domain.CollaborationFunction.Kolaborator", null)
                        .WithMany()
                        .HasForeignKey("DaftarKolaboratorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("KegiatanPrimaKolaborator", b =>
                {
                    b.HasOne("SidDmb.Domain.MasterDataFunction.ModulPrima.KegiatanPrimas.KegiatanPrima", null)
                        .WithMany()
                        .HasForeignKey("DaftarKegiatanPrimaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SidDmb.Domain.CollaborationFunction.Kolaborator", null)
                        .WithMany()
                        .HasForeignKey("KolaboratorKegiatanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("KolaboratorMateri", b =>
                {
                    b.HasOne("SidDmb.Domain.CollaborationFunction.Kolaborator", null)
                        .WithMany()
                        .HasForeignKey("DaftarKolaboratorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SidDmb.Domain.CollaborationFunction.ModulPelatihanEdukasi.MateriEdukasiDanPembelajaran.Materi", null)
                        .WithMany()
                        .HasForeignKey("DaftarMateriId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("KolaboratorPelatihan", b =>
                {
                    b.HasOne("SidDmb.Domain.CollaborationFunction.Kolaborator", null)
                        .WithMany()
                        .HasForeignKey("DaftarKolaboratorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SidDmb.Domain.CollaborationFunction.ModulPelatihanEdukasi.PeningkatanKapasitas.Pelatihan", null)
                        .WithMany()
                        .HasForeignKey("DaftarPelatihanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("KolaboratorProduk", b =>
                {
                    b.HasOne("SidDmb.Domain.CollaborationFunction.Kolaborator", null)
                        .WithMany()
                        .HasForeignKey("DaftarKolaboratorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SidDmb.Domain.CollaborationFunction.ModulProdukDanInventory.ManajemenProduk.Produk", null)
                        .WithMany()
                        .HasForeignKey("DaftarProdukId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("KolaboratorRekomendasi", b =>
                {
                    b.HasOne("SidDmb.Domain.CollaborationFunction.Kolaborator", null)
                        .WithMany()
                        .HasForeignKey("DaftarKolaboratorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SidDmb.Domain.CollaborationFunction.ModulResearchAndDevelopment.RekomendasiDanPengembanganProduk.Rekomendasi", null)
                        .WithMany()
                        .HasForeignKey("DaftarRekomendasiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("KolaboratorSertifikasi", b =>
                {
                    b.HasOne("SidDmb.Domain.CollaborationFunction.Kolaborator", null)
                        .WithMany()
                        .HasForeignKey("DaftarKolaboratorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SidDmb.Domain.CollaborationFunction.ModulProdukDanInventory.SertifikasiDanLegalitas.Sertifikasi", null)
                        .WithMany()
                        .HasForeignKey("DaftarSertifikasiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SidDmb.Domain.CollaborationFunction.Kolaborator", b =>
                {
                    b.HasOne("SidDmb.Domain.Authentication.AppUser", "AppUser")
                        .WithOne("Kolaborator")
                        .HasForeignKey("SidDmb.Domain.CollaborationFunction.Kolaborator", "AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");
                });

            modelBuilder.Entity("SidDmb.Domain.CollaborationFunction.ModulManajemenEvent.PelaporanDanDokumentasi.LaporanEvent", b =>
                {
                    b.HasOne("SidDmb.Domain.CollaborationFunction.ModulManajemenEvent.PengelolaanEvent.Event", "Event")
                        .WithOne()
                        .HasForeignKey("SidDmb.Domain.CollaborationFunction.ModulManajemenEvent.PelaporanDanDokumentasi.LaporanEvent", "EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Event");
                });

            modelBuilder.Entity("SidDmb.Domain.CollaborationFunction.ModulProdukDanInventory.ManajemenDistribusi.Distribusi", b =>
                {
                    b.HasOne("SidDmb.Domain.CollaborationFunction.ModulProdukDanInventory.ManajemenProduk.Produk", "Produk")
                        .WithMany("DaftarDistribusi")
                        .HasForeignKey("ProdukId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Produk");
                });

            modelBuilder.Entity("SidDmb.Domain.CollaborationFunction.ModulProdukDanInventory.SertifikasiDanLegalitas.Sertifikasi", b =>
                {
                    b.HasOne("SidDmb.Domain.CollaborationFunction.ModulProdukDanInventory.ManajemenProduk.Produk", "Produk")
                        .WithOne()
                        .HasForeignKey("SidDmb.Domain.CollaborationFunction.ModulProdukDanInventory.SertifikasiDanLegalitas.Sertifikasi", "ProdukId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Produk");
                });

            modelBuilder.Entity("SidDmb.Domain.CollaborationFunction.ModulResearchAndDevelopment.RekomendasiDanPengembanganProduk.Rekomendasi", b =>
                {
                    b.HasOne("SidDmb.Domain.CollaborationFunction.ModulProdukDanInventory.ManajemenProduk.Produk", "ProdukTerkait")
                        .WithMany()
                        .HasForeignKey("ProdukTerkaitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProdukTerkait");
                });

            modelBuilder.Entity("SidDmb.Domain.MasterDataFunction.ModulBudaya.Komentar", b =>
                {
                    b.HasOne("SidDmb.Domain.MasterDataFunction.ModulBudaya.ArtefakBudayas.ArtefakBudaya", "ArtefakBudaya")
                        .WithMany("DaftarKomentar")
                        .HasForeignKey("ArtefakBudayaId");

                    b.HasOne("SidDmb.Domain.MasterDataFunction.ModulBudaya.SeniBudayas.SeniBudaya", "SeniBudaya")
                        .WithMany("DaftarKomentar")
                        .HasForeignKey("SeniBudayaId");

                    b.HasOne("SidDmb.Domain.MasterDataFunction.ModulBudaya.SitusBudayas.SitusBudaya", "SitusBudaya")
                        .WithMany("DaftarKomentar")
                        .HasForeignKey("SitusBudayaId");

                    b.HasOne("SidDmb.Domain.MasterDataFunction.ModulBudaya.UpacaraBudayas.UpacaraBudaya", "UpacaraBudaya")
                        .WithMany("DaftarKomentar")
                        .HasForeignKey("UpacaraBudayaId");

                    b.Navigation("ArtefakBudaya");

                    b.Navigation("SeniBudaya");

                    b.Navigation("SitusBudaya");

                    b.Navigation("UpacaraBudaya");
                });

            modelBuilder.Entity("SidDmb.Domain.MasterDataFunction.ModulPreneur.ProdukLokals.ProdukLokal", b =>
                {
                    b.HasOne("SidDmb.Domain.MasterDataFunction.ModulPreneur.UnitUsahas.UnitUsaha", "UnitUsaha")
                        .WithMany("DaftarProduk")
                        .HasForeignKey("UnitUsahaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UnitUsaha");
                });

            modelBuilder.Entity("SidDmb.Domain.MasterDataFunction.ModulPrima.KegiatanPrimas.KegiatanPrima", b =>
                {
                    b.HasOne("SidDmb.Domain.MasterDataFunction.ModulPrima.KelompokPrimas.KelompokPrima", "KelompokPrima")
                        .WithMany("DaftarKegiatanPrima")
                        .HasForeignKey("KelompokPrimaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KelompokPrima");
                });

            modelBuilder.Entity("SidDmb.Domain.MasterDataFunction.ModulWisata.LaporanKunjungans.LaporanKunjungan", b =>
                {
                    b.HasOne("SidDmb.Domain.MasterDataFunction.ModulWisata.DestinasiWisatas.DestinasiWisata", "DestinasiWisata")
                        .WithMany("DaftarLaporanKunjungan")
                        .HasForeignKey("DestinasiWisataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DestinasiWisata");
                });

            modelBuilder.Entity("SidDmb.Domain.Authentication.AppUser", b =>
                {
                    b.Navigation("Kolaborator");
                });

            modelBuilder.Entity("SidDmb.Domain.CollaborationFunction.ModulProdukDanInventory.ManajemenProduk.Produk", b =>
                {
                    b.Navigation("DaftarDistribusi");
                });

            modelBuilder.Entity("SidDmb.Domain.MasterDataFunction.ModulBudaya.ArtefakBudayas.ArtefakBudaya", b =>
                {
                    b.Navigation("DaftarKomentar");
                });

            modelBuilder.Entity("SidDmb.Domain.MasterDataFunction.ModulBudaya.SeniBudayas.SeniBudaya", b =>
                {
                    b.Navigation("DaftarKomentar");
                });

            modelBuilder.Entity("SidDmb.Domain.MasterDataFunction.ModulBudaya.SitusBudayas.SitusBudaya", b =>
                {
                    b.Navigation("DaftarKomentar");
                });

            modelBuilder.Entity("SidDmb.Domain.MasterDataFunction.ModulBudaya.UpacaraBudayas.UpacaraBudaya", b =>
                {
                    b.Navigation("DaftarKomentar");
                });

            modelBuilder.Entity("SidDmb.Domain.MasterDataFunction.ModulPreneur.UnitUsahas.UnitUsaha", b =>
                {
                    b.Navigation("DaftarProduk");
                });

            modelBuilder.Entity("SidDmb.Domain.MasterDataFunction.ModulPrima.KelompokPrimas.KelompokPrima", b =>
                {
                    b.Navigation("DaftarKegiatanPrima");
                });

            modelBuilder.Entity("SidDmb.Domain.MasterDataFunction.ModulWisata.DestinasiWisatas.DestinasiWisata", b =>
                {
                    b.Navigation("DaftarLaporanKunjungan");
                });
#pragma warning restore 612, 618
        }
    }
}
