// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NetTopologySuite.Geometries;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SidDmb.Infrastructure.Database;

#nullable disable

namespace SidDmb.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241224101224_TambahRelasiKegiatanPrimaKeKolaborator")]
    partial class TambahRelasiKegiatanPrimaKeKolaborator
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "postgis");
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DataRisetJenisDataRiset", b =>
                {
                    b.Property<string>("DaftarDataRisetId")
                        .HasColumnType("text");

                    b.Property<int>("DaftarJenisDataRisetId")
                        .HasColumnType("integer");

                    b.HasKey("DaftarDataRisetId", "DaftarJenisDataRisetId");

                    b.HasIndex("DaftarJenisDataRisetId");

                    b.ToTable("DataRisetJenisDataRiset");
                });

            modelBuilder.Entity("DataRisetKolaborator", b =>
                {
                    b.Property<string>("DaftarDataRisetId")
                        .HasColumnType("text");

                    b.Property<int>("DaftarKolaboratorPenelitianId")
                        .HasColumnType("integer");

                    b.HasKey("DaftarDataRisetId", "DaftarKolaboratorPenelitianId");

                    b.HasIndex("DaftarKolaboratorPenelitianId");

                    b.ToTable("DataRisetKolaborator");
                });

            modelBuilder.Entity("DistribusiKolaborator", b =>
                {
                    b.Property<string>("DaftarDistribusiId")
                        .HasColumnType("text");

                    b.Property<int>("DaftarKolaboratorId")
                        .HasColumnType("integer");

                    b.HasKey("DaftarDistribusiId", "DaftarKolaboratorId");

                    b.HasIndex("DaftarKolaboratorId");

                    b.ToTable("DistribusiKolaborator");
                });

            modelBuilder.Entity("EventKolaborator", b =>
                {
                    b.Property<string>("DaftarEventId")
                        .HasColumnType("text");

                    b.Property<int>("DaftarKolaboratorId")
                        .HasColumnType("integer");

                    b.HasKey("DaftarEventId", "DaftarKolaboratorId");

                    b.HasIndex("DaftarKolaboratorId");

                    b.ToTable("EventKolaborator");
                });

            modelBuilder.Entity("KegiatanPrimaKolaborator", b =>
                {
                    b.Property<string>("DaftarKegiatanPrimaId")
                        .HasColumnType("text");

                    b.Property<int>("KolaboratorKegiatanId")
                        .HasColumnType("integer");

                    b.HasKey("DaftarKegiatanPrimaId", "KolaboratorKegiatanId");

                    b.HasIndex("KolaboratorKegiatanId");

                    b.ToTable("KegiatanPrimaKolaborator");
                });

            modelBuilder.Entity("KolaboratorMateri", b =>
                {
                    b.Property<int>("DaftarKolaboratorId")
                        .HasColumnType("integer");

                    b.Property<string>("DaftarMateriId")
                        .HasColumnType("text");

                    b.HasKey("DaftarKolaboratorId", "DaftarMateriId");

                    b.HasIndex("DaftarMateriId");

                    b.ToTable("KolaboratorMateri");
                });

            modelBuilder.Entity("KolaboratorPelatihan", b =>
                {
                    b.Property<int>("DaftarKolaboratorId")
                        .HasColumnType("integer");

                    b.Property<string>("DaftarPelatihanId")
                        .HasColumnType("text");

                    b.HasKey("DaftarKolaboratorId", "DaftarPelatihanId");

                    b.HasIndex("DaftarPelatihanId");

                    b.ToTable("KolaboratorPelatihan");
                });

            modelBuilder.Entity("KolaboratorProduk", b =>
                {
                    b.Property<int>("DaftarKolaboratorId")
                        .HasColumnType("integer");

                    b.Property<string>("DaftarProdukId")
                        .HasColumnType("text");

                    b.HasKey("DaftarKolaboratorId", "DaftarProdukId");

                    b.HasIndex("DaftarProdukId");

                    b.ToTable("KolaboratorProduk");
                });

            modelBuilder.Entity("KolaboratorRekomendasi", b =>
                {
                    b.Property<int>("DaftarKolaboratorId")
                        .HasColumnType("integer");

                    b.Property<string>("DaftarRekomendasiId")
                        .HasColumnType("text");

                    b.HasKey("DaftarKolaboratorId", "DaftarRekomendasiId");

                    b.HasIndex("DaftarRekomendasiId");

                    b.ToTable("KolaboratorRekomendasi");
                });

            modelBuilder.Entity("KolaboratorSertifikasi", b =>
                {
                    b.Property<int>("DaftarKolaboratorId")
                        .HasColumnType("integer");

                    b.Property<string>("DaftarSertifikasiId")
                        .HasColumnType("text");

                    b.HasKey("DaftarKolaboratorId", "DaftarSertifikasiId");

                    b.HasIndex("DaftarSertifikasiId");

                    b.ToTable("KolaboratorSertifikasi");
                });

            modelBuilder.Entity("SidDmb.Domain.CollaborationFunction.Kolaborator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nama")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Kolaborator");
                });

            modelBuilder.Entity("SidDmb.Domain.CollaborationFunction.ModulManajemenEvent.PelaporanDanDokumentasi.LaporanEvent", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("EventId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FeedbackPeserta")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FotoDokumentasi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LaporanDetail")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MasukanKolaborator")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("PengeluaranEvent")
                        .HasColumnType("double precision");

                    b.Property<string>("RekomendasiUntukEventBerikutnya")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("TanggalDiinputkan")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateOnly>("TanggalPelaporan")
                        .HasColumnType("date");

                    b.Property<DateTime>("TanggalPembaruanData")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("UlasanSingkatEvent")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("VideoDokumentasi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("EventId")
                        .IsUnique();

                    b.ToTable("LaporanEvent");
                });

            modelBuilder.Entity("SidDmb.Domain.CollaborationFunction.ModulManajemenEvent.PengelolaanEvent.Event", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<double>("Anggaran")
                        .HasColumnType("double precision");

                    b.Property<string>("Dekripsi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("JumlahPesertaMaksimal")
                        .HasColumnType("integer");

                    b.Property<string>("KontakInformasi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Lokasi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MediaPromosi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("Pendapatan")
                        .HasColumnType("double precision");

                    b.Property<string>("Penyelenggara")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Sponsor")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("StatusPendaftaran")
                        .HasColumnType("integer");

                    b.Property<DateTime>("TanggalDiinputkan")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("TanggalPembaruanData")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("TanggalWaktu")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("TargetPeserta")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Event");
                });

            modelBuilder.Entity("SidDmb.Domain.CollaborationFunction.ModulPelatihanEdukasi.MateriEdukasiDanPembelajaran.Materi", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("DekripsiMateri")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DokumenPendukung")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FeedBackAudiens")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("JudulMateri")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("JumlahPengguna")
                        .HasColumnType("integer");

                    b.Property<int>("KategoriMateri")
                        .HasColumnType("integer");

                    b.Property<string>("LinkUnduhan")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PenyediaMateri")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RekomendasiPembaruanMateri")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("StatusMateri")
                        .HasColumnType("integer");

                    b.Property<DateTime>("TanggalDiinputkan")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("TanggalPembaruanData")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateOnly>("TanggalRilis")
                        .HasColumnType("date");

                    b.Property<int>("TargetAudiens")
                        .HasColumnType("integer");

                    b.Property<int>("TipeMateri")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Materi");
                });

            modelBuilder.Entity("SidDmb.Domain.CollaborationFunction.ModulPelatihanEdukasi.PeningkatanKapasitas.Pelatihan", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("Dekripsi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DokumenDanMedia")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<TimeSpan>("Durasi")
                        .HasColumnType("interval");

                    b.Property<string>("EvaluasiPeserta")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Fasilitator")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FeedbackPeserta")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("JumlahPeserta")
                        .HasColumnType("integer");

                    b.Property<int>("Kategori")
                        .HasColumnType("integer");

                    b.Property<string>("Lokasi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Materi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Penyelenggara")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RekomendasiUntukPelatihanBerikutnya")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("TanggalDiinputkan")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateOnly>("TanggalPelaksanaan")
                        .HasColumnType("date");

                    b.Property<DateTime>("TanggalPembaruanData")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("TargetPeserta")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Pelatihan");
                });

            modelBuilder.Entity("SidDmb.Domain.CollaborationFunction.ModulProdukDanInventory.ManajemenDistribusi.Distribusi", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("AlamatTujuan")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("BiayaPengiriman")
                        .HasColumnType("double precision");

                    b.Property<string>("DokumenPengiriman")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("JumlahProduk")
                        .HasColumnType("integer");

                    b.Property<string>("KontakDistributor")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NamaDistributor")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ProdukId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("TanggalDiinputkan")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("TanggalPembaruanData")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateOnly>("TanggalPengiriman")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("ProdukId");

                    b.ToTable("Distribusi");
                });

            modelBuilder.Entity("SidDmb.Domain.CollaborationFunction.ModulProdukDanInventory.ManajemenProduk.Produk", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("Dekripsi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("HargaProduk")
                        .HasColumnType("double precision");

                    b.Property<int>("Kategori")
                        .HasColumnType("integer");

                    b.Property<string>("LegalitasProduk")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MediaPromosi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("StatusKetersediaan")
                        .HasColumnType("integer");

                    b.Property<int>("StokAwal")
                        .HasColumnType("integer");

                    b.Property<int>("StokSaatIni")
                        .HasColumnType("integer");

                    b.Property<DateTime>("TanggalDiinputkan")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateOnly?>("TanggalKadaluarsa")
                        .HasColumnType("date");

                    b.Property<DateTime>("TanggalPembaruanData")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateOnly>("TanggalProduksiTerakhir")
                        .HasColumnType("date");

                    b.Property<string>("UnitUsahaTerkait")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Produk");
                });

            modelBuilder.Entity("SidDmb.Domain.CollaborationFunction.ModulProdukDanInventory.SertifikasiDanLegalitas.Sertifikasi", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("DokumenSertifikat")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("JenisSertifikasi")
                        .HasColumnType("integer");

                    b.Property<string>("Komentar")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NomorSertifikasi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PemberiSertifikat")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ProdukId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ProsesYangDilalui")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("StatusSertifikasi")
                        .HasColumnType("integer");

                    b.Property<DateTime>("TanggalDiinputkan")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateOnly>("TanggalKadaluarsa")
                        .HasColumnType("date");

                    b.Property<DateTime>("TanggalPembaruanData")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateOnly>("TanggalPenerbitan")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("ProdukId")
                        .IsUnique();

                    b.ToTable("Sertifikasi");
                });

            modelBuilder.Entity("SidDmb.Domain.CollaborationFunction.ModulResearchAndDevelopment.ManajemenDataRiset.DataRiset", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("DekripsiPenelitian")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DokumenPenelitian")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("EntitasPenelitian")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FeedbackKolaborator")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("HasilPenelitian")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("JudulPenelitian")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("KategoriPenelitian")
                        .HasColumnType("integer");

                    b.Property<string>("ManfaatPenelitian")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MetodePengumpulanData")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("StatusPenelitian")
                        .HasColumnType("integer");

                    b.Property<DateTime>("TanggalDiinputkan")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateOnly>("TanggalMulaiPenelitian")
                        .HasColumnType("date");

                    b.Property<DateTime>("TanggalPembaruanData")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateOnly>("TanggalSelesaiPenelitian")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.ToTable("DataRiset");
                });

            modelBuilder.Entity("SidDmb.Domain.CollaborationFunction.ModulResearchAndDevelopment.ManajemenDataRiset.JenisDataRiset", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nama")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("JenisDataRiset");
                });

            modelBuilder.Entity("SidDmb.Domain.CollaborationFunction.ModulResearchAndDevelopment.RekomendasiDanPengembanganProduk.Rekomendasi", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<double>("Anggaran")
                        .HasColumnType("double precision");

                    b.Property<string>("Dekripsi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DokumenPendukung")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FeedbackKolaborator")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("HasilYangDiharapkan")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Judul")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("KategoriPengembangan")
                        .HasColumnType("integer");

                    b.Property<string>("PemberiRekomendasi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ProdukTerkaitId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("StatusImplementasi")
                        .HasColumnType("integer");

                    b.Property<string>("StrategiYangDirekomendasikan")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("TanggalDiinputkan")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("TanggalPembaruanData")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("TimelineRekomendasi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TujuanPengembangan")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ProdukTerkaitId");

                    b.ToTable("Rekomendasi");
                });

            modelBuilder.Entity("SidDmb.Domain.MasterDataFunction.ModulBudaya.ArtefakBudayas.ArtefakBudaya", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("Bahan")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Dekripsi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Dimensi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Foto")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Kategori")
                        .HasColumnType("integer");

                    b.Property<int>("Ketersediaan")
                        .HasColumnType("integer");

                    b.Property<string>("KomentarPengunjung")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Kondisi")
                        .HasColumnType("integer");

                    b.Property<string>("LokasiPenyimpanan")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NilaiHistoris")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Pengelola")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("RatingPengunjung")
                        .HasColumnType("double precision");

                    b.Property<DateTime>("TanggalDiinputkan")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("TanggalPembaruanData")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Usia")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ArtefakBudaya");
                });

            modelBuilder.Entity("SidDmb.Domain.MasterDataFunction.ModulBudaya.SeniBudayas.SeniBudaya", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("Dekripsi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<TimeSpan>("DurasiPentunjukan")
                        .HasColumnType("interval");

                    b.PrimitiveCollection<string[]>("FasilitasPertunjukan")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.Property<double>("HargaTiket")
                        .HasColumnType("double precision");

                    b.Property<int>("Kategori")
                        .HasColumnType("integer");

                    b.Property<string>("KomentarPenonton")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LokasiPertunjukan")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MediaPromosi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NamaPelakuSeni")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PeraturanKhusus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("RatingPenonton")
                        .HasColumnType("double precision");

                    b.Property<DateTime>("TanggalDiinputkan")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("TanggalPembaruanData")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("WaktuPertunjukan")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("SeniBudaya");
                });

            modelBuilder.Entity("SidDmb.Domain.MasterDataFunction.ModulBudaya.SitusBudayas.SitusBudaya", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("Alamat")
                        .IsRequired()
                        .HasColumnType("text");

                    b.PrimitiveCollection<string[]>("DaftarFasilitas")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.Property<string>("Dekripsi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FotoPromosi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("HargaTiketMasuk")
                        .HasColumnType("double precision");

                    b.Property<string>("JamOperasional")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Kategori")
                        .HasColumnType("integer");

                    b.Property<string>("KomentarPengunjung")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("KontakInformasi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Point>("KoordinatLokasi")
                        .IsRequired()
                        .HasColumnType("geometry");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PengelolaSitus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PeraturanKhusus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("Rating")
                        .HasColumnType("double precision");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<DateTime>("TanggalDiinputkan")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("TanggalPembaruanData")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("SitusBudaya");
                });

            modelBuilder.Entity("SidDmb.Domain.MasterDataFunction.ModulBudaya.UpacaraBudayas.UpacaraBudaya", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("Dekripsi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<TimeSpan>("Durasi")
                        .HasColumnType("interval");

                    b.PrimitiveCollection<string[]>("FasilitasPendukung")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.Property<int>("JumlahUpacara")
                        .HasColumnType("integer");

                    b.Property<int>("Kategori")
                        .HasColumnType("integer");

                    b.Property<string>("KomentarPeserta")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LokasiPelaksanaan")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MediaPromosi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PeraturanKhusus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PihakTerlibat")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RangkaianAcara")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("RatingPeserta")
                        .HasColumnType("double precision");

                    b.Property<DateTime>("TanggalDiinputkan")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("TanggalPembaruanData")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("WaktuPelaksanaan")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("UpacaraBudaya");
                });

            modelBuilder.Entity("SidDmb.Domain.MasterDataFunction.ModulPreneur.ProdukLokals.ProdukLokal", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("BahanUtama")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Dekripsi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("Harga")
                        .HasColumnType("double precision");

                    b.Property<int>("Kategori")
                        .HasColumnType("integer");

                    b.Property<string>("KontakInformasi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LegalitasDanSertifikat")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MediaPromosi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("StatusKetersediaan")
                        .HasColumnType("integer");

                    b.Property<DateTime>("TanggalDiinputkan")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("TanggalKadaluarsa")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("TanggalPembaruanData")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("TanggalProduksiTerakhir")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("UnitUsahaId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UnitUsahaId");

                    b.ToTable("ProdukLokal");
                });

            modelBuilder.Entity("SidDmb.Domain.MasterDataFunction.ModulPreneur.UnitUsahas.UnitUsaha", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("Alamat")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Dekripsi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("JumlahKaryawan")
                        .HasColumnType("integer");

                    b.Property<int>("Kategori")
                        .HasColumnType("integer");

                    b.Property<string>("KontakInformasi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Legalitas")
                        .HasColumnType("integer");

                    b.Property<string>("MediaPromosi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PemilikUsaha")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateOnly>("TanggalBerdiri")
                        .HasColumnType("date");

                    b.Property<DateTime>("TanggalDiinputkan")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("TanggalPembaruanData")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Point>("TitikKoordinat")
                        .IsRequired()
                        .HasColumnType("geometry");

                    b.HasKey("Id");

                    b.ToTable("UnitUsaha");
                });

            modelBuilder.Entity("SidDmb.Domain.MasterDataFunction.ModulPrima.KegiatanPrimas.KegiatanPrima", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<double>("AnggaranKegiatan")
                        .HasColumnType("double precision");

                    b.Property<string>("Dekripsi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DokumentasiKegiatan")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<TimeSpan>("Durasi")
                        .HasColumnType("interval");

                    b.Property<string>("Fasilitator")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FeedbackPeserta")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("HasilKegiatan")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Jenis")
                        .HasColumnType("integer");

                    b.Property<int>("JumlahPeserta")
                        .HasColumnType("integer");

                    b.Property<string>("KelompokPrimaId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Lokasi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RekomendasiUntukKegiatanBerikutnya")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("TanggalDiinputkan")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateOnly>("TanggalPelaksanaan")
                        .HasColumnType("date");

                    b.Property<DateTime>("TanggalPembaruanData")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("KelompokPrimaId");

                    b.ToTable("KegiatanPrima");
                });

            modelBuilder.Entity("SidDmb.Domain.MasterDataFunction.ModulPrima.KelompokPrimas.KelompokPrima", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("Alamat")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Dekripsi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("FokusKegiatan")
                        .HasColumnType("integer");

                    b.Property<int>("JumlahAnggota")
                        .HasColumnType("integer");

                    b.Property<int>("JumlahProgramDilaksanakan")
                        .HasColumnType("integer");

                    b.Property<string>("KetuaKelompok")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("KontakInformasi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MediaPromosi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ProgramUnggulan")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TahunBerdiri")
                        .HasColumnType("integer");

                    b.Property<DateTime>("TanggalDiinputkan")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("TanggalPembaruanData")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("KelompokPrima");
                });

            modelBuilder.Entity("SidDmb.Domain.MasterDataFunction.ModulWisata.DestinasiWisatas.DestinasiWisata", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("Alamat")
                        .IsRequired()
                        .HasColumnType("text");

                    b.PrimitiveCollection<string[]>("DaftarAktivitas")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.PrimitiveCollection<string[]>("DaftarFasilitas")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.Property<string>("Deskripsi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("HargaTiketMasuk")
                        .HasColumnType("double precision");

                    b.Property<string>("InformasiKontak")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("JamOperasional")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Kategori")
                        .HasColumnType("integer");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PengelolaDestinasi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("StatusOperasional")
                        .HasColumnType("integer");

                    b.Property<DateTime>("TanggalDiinputkan")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("TanggalPembaruanData")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Point>("TitikKoordinat")
                        .IsRequired()
                        .HasColumnType("geography (point)");

                    b.HasKey("Id");

                    b.ToTable("DestinasiWisata");
                });

            modelBuilder.Entity("SidDmb.Domain.MasterDataFunction.ModulWisata.KalenderAcaras.KalenderAcara", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<int>("BatasKuotaPeserta")
                        .HasColumnType("integer");

                    b.Property<string>("DekripsiAcara")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("HargaTiketAcara")
                        .HasColumnType("double precision");

                    b.Property<int>("Kategori")
                        .HasColumnType("integer");

                    b.Property<string>("KontakInformasi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LokasiAcara")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MediaPromosi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NamaAcara")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PenanggungJawab")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("RatingAcara")
                        .HasColumnType("double precision");

                    b.Property<string>("SponsorAcara")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("StatusPendaftaran")
                        .HasColumnType("integer");

                    b.Property<DateTime>("TanggalDanWaktu")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("TanggalDiinputkan")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("TanggalPembaruanData")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("TargetPesertaAcara")
                        .HasColumnType("integer");

                    b.Property<string>("TautanPendaftaran")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("KalenderAcara");
                });

            modelBuilder.Entity("SidDmb.Domain.MasterDataFunction.ModulWisata.LaporanKunjungans.LaporanKunjungan", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("DestinasiWisataId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<TimeSpan>("DurasiKunjungan")
                        .HasColumnType("interval");

                    b.Property<int>("JumlahWisatawanDomestik")
                        .HasColumnType("integer");

                    b.Property<int>("JumlahWisatawanInternasional")
                        .HasColumnType("integer");

                    b.Property<string>("KomentarPengunjung")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("RatingPengunjung")
                        .HasColumnType("double precision");

                    b.Property<DateTime>("TanggalDiinputkan")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("TanggalKunjungan")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("TanggalPembaruanData")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("TiketTerjual")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("DestinasiWisataId");

                    b.ToTable("LaporanKunjungan");
                });

            modelBuilder.Entity("DataRisetJenisDataRiset", b =>
                {
                    b.HasOne("SidDmb.Domain.CollaborationFunction.ModulResearchAndDevelopment.ManajemenDataRiset.DataRiset", null)
                        .WithMany()
                        .HasForeignKey("DaftarDataRisetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SidDmb.Domain.CollaborationFunction.ModulResearchAndDevelopment.ManajemenDataRiset.JenisDataRiset", null)
                        .WithMany()
                        .HasForeignKey("DaftarJenisDataRisetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DataRisetKolaborator", b =>
                {
                    b.HasOne("SidDmb.Domain.CollaborationFunction.ModulResearchAndDevelopment.ManajemenDataRiset.DataRiset", null)
                        .WithMany()
                        .HasForeignKey("DaftarDataRisetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SidDmb.Domain.CollaborationFunction.Kolaborator", null)
                        .WithMany()
                        .HasForeignKey("DaftarKolaboratorPenelitianId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DistribusiKolaborator", b =>
                {
                    b.HasOne("SidDmb.Domain.CollaborationFunction.ModulProdukDanInventory.ManajemenDistribusi.Distribusi", null)
                        .WithMany()
                        .HasForeignKey("DaftarDistribusiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SidDmb.Domain.CollaborationFunction.Kolaborator", null)
                        .WithMany()
                        .HasForeignKey("DaftarKolaboratorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EventKolaborator", b =>
                {
                    b.HasOne("SidDmb.Domain.CollaborationFunction.ModulManajemenEvent.PengelolaanEvent.Event", null)
                        .WithMany()
                        .HasForeignKey("DaftarEventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SidDmb.Domain.CollaborationFunction.Kolaborator", null)
                        .WithMany()
                        .HasForeignKey("DaftarKolaboratorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("KegiatanPrimaKolaborator", b =>
                {
                    b.HasOne("SidDmb.Domain.MasterDataFunction.ModulPrima.KegiatanPrimas.KegiatanPrima", null)
                        .WithMany()
                        .HasForeignKey("DaftarKegiatanPrimaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SidDmb.Domain.CollaborationFunction.Kolaborator", null)
                        .WithMany()
                        .HasForeignKey("KolaboratorKegiatanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("KolaboratorMateri", b =>
                {
                    b.HasOne("SidDmb.Domain.CollaborationFunction.Kolaborator", null)
                        .WithMany()
                        .HasForeignKey("DaftarKolaboratorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SidDmb.Domain.CollaborationFunction.ModulPelatihanEdukasi.MateriEdukasiDanPembelajaran.Materi", null)
                        .WithMany()
                        .HasForeignKey("DaftarMateriId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("KolaboratorPelatihan", b =>
                {
                    b.HasOne("SidDmb.Domain.CollaborationFunction.Kolaborator", null)
                        .WithMany()
                        .HasForeignKey("DaftarKolaboratorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SidDmb.Domain.CollaborationFunction.ModulPelatihanEdukasi.PeningkatanKapasitas.Pelatihan", null)
                        .WithMany()
                        .HasForeignKey("DaftarPelatihanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("KolaboratorProduk", b =>
                {
                    b.HasOne("SidDmb.Domain.CollaborationFunction.Kolaborator", null)
                        .WithMany()
                        .HasForeignKey("DaftarKolaboratorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SidDmb.Domain.CollaborationFunction.ModulProdukDanInventory.ManajemenProduk.Produk", null)
                        .WithMany()
                        .HasForeignKey("DaftarProdukId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("KolaboratorRekomendasi", b =>
                {
                    b.HasOne("SidDmb.Domain.CollaborationFunction.Kolaborator", null)
                        .WithMany()
                        .HasForeignKey("DaftarKolaboratorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SidDmb.Domain.CollaborationFunction.ModulResearchAndDevelopment.RekomendasiDanPengembanganProduk.Rekomendasi", null)
                        .WithMany()
                        .HasForeignKey("DaftarRekomendasiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("KolaboratorSertifikasi", b =>
                {
                    b.HasOne("SidDmb.Domain.CollaborationFunction.Kolaborator", null)
                        .WithMany()
                        .HasForeignKey("DaftarKolaboratorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SidDmb.Domain.CollaborationFunction.ModulProdukDanInventory.SertifikasiDanLegalitas.Sertifikasi", null)
                        .WithMany()
                        .HasForeignKey("DaftarSertifikasiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SidDmb.Domain.CollaborationFunction.ModulManajemenEvent.PelaporanDanDokumentasi.LaporanEvent", b =>
                {
                    b.HasOne("SidDmb.Domain.CollaborationFunction.ModulManajemenEvent.PengelolaanEvent.Event", "Event")
                        .WithOne()
                        .HasForeignKey("SidDmb.Domain.CollaborationFunction.ModulManajemenEvent.PelaporanDanDokumentasi.LaporanEvent", "EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Event");
                });

            modelBuilder.Entity("SidDmb.Domain.CollaborationFunction.ModulProdukDanInventory.ManajemenDistribusi.Distribusi", b =>
                {
                    b.HasOne("SidDmb.Domain.CollaborationFunction.ModulProdukDanInventory.ManajemenProduk.Produk", "Produk")
                        .WithMany("DaftarDistribusi")
                        .HasForeignKey("ProdukId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Produk");
                });

            modelBuilder.Entity("SidDmb.Domain.CollaborationFunction.ModulProdukDanInventory.SertifikasiDanLegalitas.Sertifikasi", b =>
                {
                    b.HasOne("SidDmb.Domain.CollaborationFunction.ModulProdukDanInventory.ManajemenProduk.Produk", "Produk")
                        .WithOne()
                        .HasForeignKey("SidDmb.Domain.CollaborationFunction.ModulProdukDanInventory.SertifikasiDanLegalitas.Sertifikasi", "ProdukId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Produk");
                });

            modelBuilder.Entity("SidDmb.Domain.CollaborationFunction.ModulResearchAndDevelopment.RekomendasiDanPengembanganProduk.Rekomendasi", b =>
                {
                    b.HasOne("SidDmb.Domain.CollaborationFunction.ModulProdukDanInventory.ManajemenProduk.Produk", "ProdukTerkait")
                        .WithMany()
                        .HasForeignKey("ProdukTerkaitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProdukTerkait");
                });

            modelBuilder.Entity("SidDmb.Domain.MasterDataFunction.ModulPreneur.ProdukLokals.ProdukLokal", b =>
                {
                    b.HasOne("SidDmb.Domain.MasterDataFunction.ModulPreneur.UnitUsahas.UnitUsaha", "UnitUsaha")
                        .WithMany("DaftarProduk")
                        .HasForeignKey("UnitUsahaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UnitUsaha");
                });

            modelBuilder.Entity("SidDmb.Domain.MasterDataFunction.ModulPrima.KegiatanPrimas.KegiatanPrima", b =>
                {
                    b.HasOne("SidDmb.Domain.MasterDataFunction.ModulPrima.KelompokPrimas.KelompokPrima", "KelompokPrima")
                        .WithMany("DaftarKegiatanPrima")
                        .HasForeignKey("KelompokPrimaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KelompokPrima");
                });

            modelBuilder.Entity("SidDmb.Domain.MasterDataFunction.ModulWisata.LaporanKunjungans.LaporanKunjungan", b =>
                {
                    b.HasOne("SidDmb.Domain.MasterDataFunction.ModulWisata.DestinasiWisatas.DestinasiWisata", "DestinasiWisata")
                        .WithMany("DaftarLaporanKunjungan")
                        .HasForeignKey("DestinasiWisataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DestinasiWisata");
                });

            modelBuilder.Entity("SidDmb.Domain.CollaborationFunction.ModulProdukDanInventory.ManajemenProduk.Produk", b =>
                {
                    b.Navigation("DaftarDistribusi");
                });

            modelBuilder.Entity("SidDmb.Domain.MasterDataFunction.ModulPreneur.UnitUsahas.UnitUsaha", b =>
                {
                    b.Navigation("DaftarProduk");
                });

            modelBuilder.Entity("SidDmb.Domain.MasterDataFunction.ModulPrima.KelompokPrimas.KelompokPrima", b =>
                {
                    b.Navigation("DaftarKegiatanPrima");
                });

            modelBuilder.Entity("SidDmb.Domain.MasterDataFunction.ModulWisata.DestinasiWisatas.DestinasiWisata", b =>
                {
                    b.Navigation("DaftarLaporanKunjungan");
                });
#pragma warning restore 612, 618
        }
    }
}
